{"ast":null,"code":"export function encodeMethodIntoRequestBody(event) {\n  if (event.target instanceof HTMLFormElement) {\n    var form = event.target,\n      fetchOptions = event.detail.fetchOptions;\n    form.addEventListener(\"turbo:submit-start\", function (_ref) {\n      var submitter = _ref.detail.formSubmission.submitter;\n      var body = isBodyInit(fetchOptions.body) ? fetchOptions.body : new URLSearchParams();\n      var method = determineFetchMethod(submitter, body, form);\n      if (!/get/i.test(method)) {\n        if (/post/i.test(method)) {\n          body[\"delete\"](\"_method\");\n        } else {\n          body.set(\"_method\", method);\n        }\n        fetchOptions.method = \"post\";\n      }\n    }, {\n      once: true\n    });\n  }\n}\nfunction determineFetchMethod(submitter, body, form) {\n  var formMethod = determineFormMethod(submitter);\n  var overrideMethod = body.get(\"_method\");\n  var method = form.getAttribute(\"method\") || \"get\";\n  if (typeof formMethod == \"string\") {\n    return formMethod;\n  } else if (typeof overrideMethod == \"string\") {\n    return overrideMethod;\n  } else {\n    return method;\n  }\n}\nfunction determineFormMethod(submitter) {\n  if (submitter instanceof HTMLButtonElement || submitter instanceof HTMLInputElement) {\n    if (submitter.hasAttribute(\"formmethod\")) {\n      return submitter.formMethod;\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\nfunction isBodyInit(body) {\n  return body instanceof FormData || body instanceof URLSearchParams;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}