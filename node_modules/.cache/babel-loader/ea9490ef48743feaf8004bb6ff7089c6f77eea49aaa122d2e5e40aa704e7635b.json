{"ast":null,"code":"var _templateObject, _templateObject2;\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n/*\nTurbo 7.2.5\nCopyright © 2023 37signals LLC\n */\n(function () {\n  if (window.Reflect === undefined || window.customElements === undefined || window.customElements.polyfillWrapFlushCallback) {\n    return;\n  }\n  var BuiltInHTMLElement = HTMLElement;\n  var wrapperForTheName = {\n    HTMLElement: function HTMLElement() {\n      return Reflect.construct(BuiltInHTMLElement, [], this.constructor);\n    }\n  };\n  window.HTMLElement = wrapperForTheName[\"HTMLElement\"];\n  HTMLElement.prototype = BuiltInHTMLElement.prototype;\n  HTMLElement.prototype.constructor = HTMLElement;\n  Object.setPrototypeOf(HTMLElement, BuiltInHTMLElement);\n})();\n\n/**\n * The MIT License (MIT)\n * \n * Copyright (c) 2019 Javan Makhmali\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function (prototype) {\n  if (typeof prototype.requestSubmit == \"function\") return;\n  prototype.requestSubmit = function (submitter) {\n    if (submitter) {\n      validateSubmitter(submitter, this);\n      submitter.click();\n    } else {\n      submitter = document.createElement(\"input\");\n      submitter.type = \"submit\";\n      submitter.hidden = true;\n      this.appendChild(submitter);\n      submitter.click();\n      this.removeChild(submitter);\n    }\n  };\n  function validateSubmitter(submitter, form) {\n    submitter instanceof HTMLElement || raise(TypeError, \"parameter 1 is not of type 'HTMLElement'\");\n    submitter.type == \"submit\" || raise(TypeError, \"The specified element is not a submit button\");\n    submitter.form == form || raise(DOMException, \"The specified element is not owned by this form element\", \"NotFoundError\");\n  }\n  function raise(errorConstructor, message, name) {\n    throw new errorConstructor(\"Failed to execute 'requestSubmit' on 'HTMLFormElement': \" + message + \".\", name);\n  }\n})(HTMLFormElement.prototype);\nvar submittersByForm = new WeakMap();\nfunction findSubmitterFromClickTarget(target) {\n  var element = target instanceof Element ? target : target instanceof Node ? target.parentElement : null;\n  var candidate = element ? element.closest(\"input, button\") : null;\n  return (candidate === null || candidate === void 0 ? void 0 : candidate.type) == \"submit\" ? candidate : null;\n}\nfunction clickCaptured(event) {\n  var submitter = findSubmitterFromClickTarget(event.target);\n  if (submitter && submitter.form) {\n    submittersByForm.set(submitter.form, submitter);\n  }\n}\n(function () {\n  if (\"submitter\" in Event.prototype) return;\n  var prototype;\n  if (\"SubmitEvent\" in window && /Apple Computer/.test(navigator.vendor)) {\n    prototype = window.SubmitEvent.prototype;\n  } else if (\"SubmitEvent\" in window) {\n    return;\n  } else {\n    prototype = window.Event.prototype;\n  }\n  addEventListener(\"click\", clickCaptured, true);\n  Object.defineProperty(prototype, \"submitter\", {\n    get: function get() {\n      if (this.type == \"submit\" && this.target instanceof HTMLFormElement) {\n        return submittersByForm.get(this.target);\n      }\n    }\n  });\n})();\nvar FrameLoadingStyle;\n(function (FrameLoadingStyle) {\n  FrameLoadingStyle[\"eager\"] = \"eager\";\n  FrameLoadingStyle[\"lazy\"] = \"lazy\";\n})(FrameLoadingStyle || (FrameLoadingStyle = {}));\nvar FrameElement = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(FrameElement, _HTMLElement);\n  var _super = _createSuper(FrameElement);\n  function FrameElement() {\n    var _this;\n    _classCallCheck(this, FrameElement);\n    _this = _super.call(this);\n    _this.loaded = Promise.resolve();\n    _this.delegate = new FrameElement.delegateConstructor(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(FrameElement, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.delegate.connect();\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      this.delegate.disconnect();\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      return this.delegate.sourceURLReloaded();\n    }\n  }, {\n    key: \"attributeChangedCallback\",\n    value: function attributeChangedCallback(name) {\n      if (name == \"loading\") {\n        this.delegate.loadingStyleChanged();\n      } else if (name == \"complete\") {\n        this.delegate.completeChanged();\n      } else if (name == \"src\") {\n        this.delegate.sourceURLChanged();\n      } else {\n        this.delegate.disabledChanged();\n      }\n    }\n  }, {\n    key: \"src\",\n    get: function get() {\n      return this.getAttribute(\"src\");\n    },\n    set: function set(value) {\n      if (value) {\n        this.setAttribute(\"src\", value);\n      } else {\n        this.removeAttribute(\"src\");\n      }\n    }\n  }, {\n    key: \"loading\",\n    get: function get() {\n      return frameLoadingStyleFromString(this.getAttribute(\"loading\") || \"\");\n    },\n    set: function set(value) {\n      if (value) {\n        this.setAttribute(\"loading\", value);\n      } else {\n        this.removeAttribute(\"loading\");\n      }\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this.hasAttribute(\"disabled\");\n    },\n    set: function set(value) {\n      if (value) {\n        this.setAttribute(\"disabled\", \"\");\n      } else {\n        this.removeAttribute(\"disabled\");\n      }\n    }\n  }, {\n    key: \"autoscroll\",\n    get: function get() {\n      return this.hasAttribute(\"autoscroll\");\n    },\n    set: function set(value) {\n      if (value) {\n        this.setAttribute(\"autoscroll\", \"\");\n      } else {\n        this.removeAttribute(\"autoscroll\");\n      }\n    }\n  }, {\n    key: \"complete\",\n    get: function get() {\n      return !this.delegate.isLoading;\n    }\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      return this.ownerDocument === document && !this.isPreview;\n    }\n  }, {\n    key: \"isPreview\",\n    get: function get() {\n      var _a, _b;\n      return (_b = (_a = this.ownerDocument) === null || _a === void 0 ? void 0 : _a.documentElement) === null || _b === void 0 ? void 0 : _b.hasAttribute(\"data-turbo-preview\");\n    }\n  }], [{\n    key: \"observedAttributes\",\n    get: function get() {\n      return [\"disabled\", \"complete\", \"loading\", \"src\"];\n    }\n  }]);\n  return FrameElement;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\nfunction frameLoadingStyleFromString(style) {\n  switch (style.toLowerCase()) {\n    case \"lazy\":\n      return FrameLoadingStyle.lazy;\n    default:\n      return FrameLoadingStyle.eager;\n  }\n}\nfunction expandURL(locatable) {\n  return new URL(locatable.toString(), document.baseURI);\n}\nfunction getAnchor(url) {\n  var anchorMatch;\n  if (url.hash) {\n    return url.hash.slice(1);\n  } else if (anchorMatch = url.href.match(/#(.*)$/)) {\n    return anchorMatch[1];\n  }\n}\nfunction getAction(form, submitter) {\n  var action = (submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute(\"formaction\")) || form.getAttribute(\"action\") || form.action;\n  return expandURL(action);\n}\nfunction getExtension(url) {\n  return (getLastPathComponent(url).match(/\\.[^.]*$/) || [])[0] || \"\";\n}\nfunction isHTML(url) {\n  return !!getExtension(url).match(/^(?:|\\.(?:htm|html|xhtml|php))$/);\n}\nfunction isPrefixedBy(baseURL, url) {\n  var prefix = getPrefix(url);\n  return baseURL.href === expandURL(prefix).href || baseURL.href.startsWith(prefix);\n}\nfunction locationIsVisitable(location, rootLocation) {\n  return isPrefixedBy(location, rootLocation) && isHTML(location);\n}\nfunction getRequestURL(url) {\n  var anchor = getAnchor(url);\n  return anchor != null ? url.href.slice(0, -(anchor.length + 1)) : url.href;\n}\nfunction toCacheKey(url) {\n  return getRequestURL(url);\n}\nfunction urlsAreEqual(left, right) {\n  return expandURL(left).href == expandURL(right).href;\n}\nfunction getPathComponents(url) {\n  return url.pathname.split(\"/\").slice(1);\n}\nfunction getLastPathComponent(url) {\n  return getPathComponents(url).slice(-1)[0];\n}\nfunction getPrefix(url) {\n  return addTrailingSlash(url.origin + url.pathname);\n}\nfunction addTrailingSlash(value) {\n  return value.endsWith(\"/\") ? value : value + \"/\";\n}\nvar FetchResponse = /*#__PURE__*/function () {\n  function FetchResponse(response) {\n    _classCallCheck(this, FetchResponse);\n    this.response = response;\n  }\n  _createClass(FetchResponse, [{\n    key: \"succeeded\",\n    get: function get() {\n      return this.response.ok;\n    }\n  }, {\n    key: \"failed\",\n    get: function get() {\n      return !this.succeeded;\n    }\n  }, {\n    key: \"clientError\",\n    get: function get() {\n      return this.statusCode >= 400 && this.statusCode <= 499;\n    }\n  }, {\n    key: \"serverError\",\n    get: function get() {\n      return this.statusCode >= 500 && this.statusCode <= 599;\n    }\n  }, {\n    key: \"redirected\",\n    get: function get() {\n      return this.response.redirected;\n    }\n  }, {\n    key: \"location\",\n    get: function get() {\n      return expandURL(this.response.url);\n    }\n  }, {\n    key: \"isHTML\",\n    get: function get() {\n      return this.contentType && this.contentType.match(/^(?:text\\/([^\\s;,]+\\b)?html|application\\/xhtml\\+xml)\\b/);\n    }\n  }, {\n    key: \"statusCode\",\n    get: function get() {\n      return this.response.status;\n    }\n  }, {\n    key: \"contentType\",\n    get: function get() {\n      return this.header(\"Content-Type\");\n    }\n  }, {\n    key: \"responseText\",\n    get: function get() {\n      return this.response.clone().text();\n    }\n  }, {\n    key: \"responseHTML\",\n    get: function get() {\n      if (this.isHTML) {\n        return this.response.clone().text();\n      } else {\n        return Promise.resolve(undefined);\n      }\n    }\n  }, {\n    key: \"header\",\n    value: function header(name) {\n      return this.response.headers.get(name);\n    }\n  }]);\n  return FetchResponse;\n}();\nfunction activateScriptElement(element) {\n  if (element.getAttribute(\"data-turbo-eval\") == \"false\") {\n    return element;\n  } else {\n    var createdScriptElement = document.createElement(\"script\");\n    var cspNonce = getMetaContent(\"csp-nonce\");\n    if (cspNonce) {\n      createdScriptElement.nonce = cspNonce;\n    }\n    createdScriptElement.textContent = element.textContent;\n    createdScriptElement.async = false;\n    copyElementAttributes(createdScriptElement, element);\n    return createdScriptElement;\n  }\n}\nfunction copyElementAttributes(destinationElement, sourceElement) {\n  var _iterator = _createForOfIteratorHelper(sourceElement.attributes),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _ref = _step.value;\n      var name = _ref.name;\n      var value = _ref.value;\n      destinationElement.setAttribute(name, value);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\nfunction createDocumentFragment(html) {\n  var template = document.createElement(\"template\");\n  template.innerHTML = html;\n  return template.content;\n}\nfunction dispatch(eventName) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    target = _ref2.target,\n    cancelable = _ref2.cancelable,\n    detail = _ref2.detail;\n  var event = new CustomEvent(eventName, {\n    cancelable: cancelable,\n    bubbles: true,\n    composed: true,\n    detail: detail\n  });\n  if (target && target.isConnected) {\n    target.dispatchEvent(event);\n  } else {\n    document.documentElement.dispatchEvent(event);\n  }\n  return event;\n}\nfunction nextAnimationFrame() {\n  return new Promise(function (resolve) {\n    return requestAnimationFrame(function () {\n      return resolve();\n    });\n  });\n}\nfunction nextEventLoopTick() {\n  return new Promise(function (resolve) {\n    return setTimeout(function () {\n      return resolve();\n    }, 0);\n  });\n}\nfunction nextMicrotask() {\n  return Promise.resolve();\n}\nfunction parseHTMLDocument() {\n  var html = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return new DOMParser().parseFromString(html, \"text/html\");\n}\nfunction unindent(strings) {\n  for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n  var lines = interpolate(strings, values).replace(/^\\n/, \"\").split(\"\\n\");\n  var match = lines[0].match(/^\\s+/);\n  var indent = match ? match[0].length : 0;\n  return lines.map(function (line) {\n    return line.slice(indent);\n  }).join(\"\\n\");\n}\nfunction interpolate(strings, values) {\n  return strings.reduce(function (result, string, i) {\n    var value = values[i] == undefined ? \"\" : values[i];\n    return result + string + value;\n  }, \"\");\n}\nfunction uuid() {\n  return Array.from({\n    length: 36\n  }).map(function (_, i) {\n    if (i == 8 || i == 13 || i == 18 || i == 23) {\n      return \"-\";\n    } else if (i == 14) {\n      return \"4\";\n    } else if (i == 19) {\n      return (Math.floor(Math.random() * 4) + 8).toString(16);\n    } else {\n      return Math.floor(Math.random() * 15).toString(16);\n    }\n  }).join(\"\");\n}\nfunction getAttribute(attributeName) {\n  for (var _len2 = arguments.length, elements = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    elements[_key2 - 1] = arguments[_key2];\n  }\n  var _iterator2 = _createForOfIteratorHelper(elements.map(function (element) {\n      return element === null || element === void 0 ? void 0 : element.getAttribute(attributeName);\n    })),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var value = _step2.value;\n      if (typeof value == \"string\") return value;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return null;\n}\nfunction hasAttribute(attributeName) {\n  for (var _len3 = arguments.length, elements = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    elements[_key3 - 1] = arguments[_key3];\n  }\n  return elements.some(function (element) {\n    return element && element.hasAttribute(attributeName);\n  });\n}\nfunction markAsBusy() {\n  for (var _len4 = arguments.length, elements = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    elements[_key4] = arguments[_key4];\n  }\n  for (var _i = 0, _elements = elements; _i < _elements.length; _i++) {\n    var element = _elements[_i];\n    if (element.localName == \"turbo-frame\") {\n      element.setAttribute(\"busy\", \"\");\n    }\n    element.setAttribute(\"aria-busy\", \"true\");\n  }\n}\nfunction clearBusyState() {\n  for (var _len5 = arguments.length, elements = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    elements[_key5] = arguments[_key5];\n  }\n  for (var _i2 = 0, _elements2 = elements; _i2 < _elements2.length; _i2++) {\n    var element = _elements2[_i2];\n    if (element.localName == \"turbo-frame\") {\n      element.removeAttribute(\"busy\");\n    }\n    element.removeAttribute(\"aria-busy\");\n  }\n}\nfunction waitForLoad(element) {\n  var timeoutInMilliseconds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2000;\n  return new Promise(function (resolve) {\n    var onComplete = function onComplete() {\n      element.removeEventListener(\"error\", onComplete);\n      element.removeEventListener(\"load\", onComplete);\n      resolve();\n    };\n    element.addEventListener(\"load\", onComplete, {\n      once: true\n    });\n    element.addEventListener(\"error\", onComplete, {\n      once: true\n    });\n    setTimeout(resolve, timeoutInMilliseconds);\n  });\n}\nfunction getHistoryMethodForAction(action) {\n  switch (action) {\n    case \"replace\":\n      return history.replaceState;\n    case \"advance\":\n    case \"restore\":\n      return history.pushState;\n  }\n}\nfunction isAction(action) {\n  return action == \"advance\" || action == \"replace\" || action == \"restore\";\n}\nfunction getVisitAction() {\n  for (var _len6 = arguments.length, elements = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    elements[_key6] = arguments[_key6];\n  }\n  var action = getAttribute.apply(void 0, [\"data-turbo-action\"].concat(elements));\n  return isAction(action) ? action : null;\n}\nfunction getMetaElement(name) {\n  return document.querySelector(\"meta[name=\\\"\".concat(name, \"\\\"]\"));\n}\nfunction getMetaContent(name) {\n  var element = getMetaElement(name);\n  return element && element.content;\n}\nfunction setMetaContent(name, content) {\n  var element = getMetaElement(name);\n  if (!element) {\n    element = document.createElement(\"meta\");\n    element.setAttribute(\"name\", name);\n    document.head.appendChild(element);\n  }\n  element.setAttribute(\"content\", content);\n  return element;\n}\nfunction findClosestRecursively(element, selector) {\n  var _a;\n  if (element instanceof Element) {\n    return element.closest(selector) || findClosestRecursively(element.assignedSlot || ((_a = element.getRootNode()) === null || _a === void 0 ? void 0 : _a.host), selector);\n  }\n}\nvar FetchMethod;\n(function (FetchMethod) {\n  FetchMethod[FetchMethod[\"get\"] = 0] = \"get\";\n  FetchMethod[FetchMethod[\"post\"] = 1] = \"post\";\n  FetchMethod[FetchMethod[\"put\"] = 2] = \"put\";\n  FetchMethod[FetchMethod[\"patch\"] = 3] = \"patch\";\n  FetchMethod[FetchMethod[\"delete\"] = 4] = \"delete\";\n})(FetchMethod || (FetchMethod = {}));\nfunction fetchMethodFromString(method) {\n  switch (method.toLowerCase()) {\n    case \"get\":\n      return FetchMethod.get;\n    case \"post\":\n      return FetchMethod.post;\n    case \"put\":\n      return FetchMethod.put;\n    case \"patch\":\n      return FetchMethod.patch;\n    case \"delete\":\n      return FetchMethod[\"delete\"];\n  }\n}\nvar FetchRequest = /*#__PURE__*/function () {\n  function FetchRequest(delegate, method, location) {\n    var body = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new URLSearchParams();\n    var target = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    _classCallCheck(this, FetchRequest);\n    this.abortController = new AbortController();\n    this.resolveRequestPromise = function (_value) {};\n    this.delegate = delegate;\n    this.method = method;\n    this.headers = this.defaultHeaders;\n    this.body = body;\n    this.url = location;\n    this.target = target;\n  }\n  _createClass(FetchRequest, [{\n    key: \"location\",\n    get: function get() {\n      return this.url;\n    }\n  }, {\n    key: \"params\",\n    get: function get() {\n      return this.url.searchParams;\n    }\n  }, {\n    key: \"entries\",\n    get: function get() {\n      return this.body ? Array.from(this.body.entries()) : [];\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.abortController.abort();\n    }\n  }, {\n    key: \"perform\",\n    value: function () {\n      var _perform = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var fetchOptions, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              fetchOptions = this.fetchOptions;\n              this.delegate.prepareRequest(this);\n              _context.next = 4;\n              return this.allowRequestToBeIntercepted(fetchOptions);\n            case 4:\n              _context.prev = 4;\n              this.delegate.requestStarted(this);\n              _context.next = 8;\n              return fetch(this.url.href, fetchOptions);\n            case 8:\n              response = _context.sent;\n              _context.next = 11;\n              return this.receive(response);\n            case 11:\n              return _context.abrupt(\"return\", _context.sent);\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](4);\n              if (!(_context.t0.name !== \"AbortError\")) {\n                _context.next = 19;\n                break;\n              }\n              if (this.willDelegateErrorHandling(_context.t0)) {\n                this.delegate.requestErrored(this, _context.t0);\n              }\n              throw _context.t0;\n            case 19:\n              _context.prev = 19;\n              this.delegate.requestFinished(this);\n              return _context.finish(19);\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[4, 14, 19, 22]]);\n      }));\n      function perform() {\n        return _perform.apply(this, arguments);\n      }\n      return perform;\n    }()\n  }, {\n    key: \"receive\",\n    value: function () {\n      var _receive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(response) {\n        var fetchResponse, event;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              fetchResponse = new FetchResponse(response);\n              event = dispatch(\"turbo:before-fetch-response\", {\n                cancelable: true,\n                detail: {\n                  fetchResponse: fetchResponse\n                },\n                target: this.target\n              });\n              if (event.defaultPrevented) {\n                this.delegate.requestPreventedHandlingResponse(this, fetchResponse);\n              } else if (fetchResponse.succeeded) {\n                this.delegate.requestSucceededWithResponse(this, fetchResponse);\n              } else {\n                this.delegate.requestFailedWithResponse(this, fetchResponse);\n              }\n              return _context2.abrupt(\"return\", fetchResponse);\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function receive(_x) {\n        return _receive.apply(this, arguments);\n      }\n      return receive;\n    }()\n  }, {\n    key: \"fetchOptions\",\n    get: function get() {\n      var _a;\n      return {\n        method: FetchMethod[this.method].toUpperCase(),\n        credentials: \"same-origin\",\n        headers: this.headers,\n        redirect: \"follow\",\n        body: this.isIdempotent ? null : this.body,\n        signal: this.abortSignal,\n        referrer: (_a = this.delegate.referrer) === null || _a === void 0 ? void 0 : _a.href\n      };\n    }\n  }, {\n    key: \"defaultHeaders\",\n    get: function get() {\n      return {\n        Accept: \"text/html, application/xhtml+xml\"\n      };\n    }\n  }, {\n    key: \"isIdempotent\",\n    get: function get() {\n      return this.method == FetchMethod.get;\n    }\n  }, {\n    key: \"abortSignal\",\n    get: function get() {\n      return this.abortController.signal;\n    }\n  }, {\n    key: \"acceptResponseType\",\n    value: function acceptResponseType(mimeType) {\n      this.headers[\"Accept\"] = [mimeType, this.headers[\"Accept\"]].join(\", \");\n    }\n  }, {\n    key: \"allowRequestToBeIntercepted\",\n    value: function () {\n      var _allowRequestToBeIntercepted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(fetchOptions) {\n        var _this2 = this;\n        var requestInterception, event;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              requestInterception = new Promise(function (resolve) {\n                return _this2.resolveRequestPromise = resolve;\n              });\n              event = dispatch(\"turbo:before-fetch-request\", {\n                cancelable: true,\n                detail: {\n                  fetchOptions: fetchOptions,\n                  url: this.url,\n                  resume: this.resolveRequestPromise\n                },\n                target: this.target\n              });\n              if (!event.defaultPrevented) {\n                _context3.next = 5;\n                break;\n              }\n              _context3.next = 5;\n              return requestInterception;\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function allowRequestToBeIntercepted(_x2) {\n        return _allowRequestToBeIntercepted.apply(this, arguments);\n      }\n      return allowRequestToBeIntercepted;\n    }()\n  }, {\n    key: \"willDelegateErrorHandling\",\n    value: function willDelegateErrorHandling(error) {\n      var event = dispatch(\"turbo:fetch-request-error\", {\n        target: this.target,\n        cancelable: true,\n        detail: {\n          request: this,\n          error: error\n        }\n      });\n      return !event.defaultPrevented;\n    }\n  }]);\n  return FetchRequest;\n}();\nvar AppearanceObserver = /*#__PURE__*/function () {\n  function AppearanceObserver(delegate, element) {\n    var _this3 = this;\n    _classCallCheck(this, AppearanceObserver);\n    this.started = false;\n    this.intersect = function (entries) {\n      var lastEntry = entries.slice(-1)[0];\n      if (lastEntry === null || lastEntry === void 0 ? void 0 : lastEntry.isIntersecting) {\n        _this3.delegate.elementAppearedInViewport(_this3.element);\n      }\n    };\n    this.delegate = delegate;\n    this.element = element;\n    this.intersectionObserver = new IntersectionObserver(this.intersect);\n  }\n  _createClass(AppearanceObserver, [{\n    key: \"start\",\n    value: function start() {\n      if (!this.started) {\n        this.started = true;\n        this.intersectionObserver.observe(this.element);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.started) {\n        this.started = false;\n        this.intersectionObserver.unobserve(this.element);\n      }\n    }\n  }]);\n  return AppearanceObserver;\n}();\nvar StreamMessage = /*#__PURE__*/function () {\n  function StreamMessage(fragment) {\n    _classCallCheck(this, StreamMessage);\n    this.fragment = importStreamElements(fragment);\n  }\n  _createClass(StreamMessage, null, [{\n    key: \"wrap\",\n    value: function wrap(message) {\n      if (typeof message == \"string\") {\n        return new this(createDocumentFragment(message));\n      } else {\n        return message;\n      }\n    }\n  }]);\n  return StreamMessage;\n}();\nStreamMessage.contentType = \"text/vnd.turbo-stream.html\";\nfunction importStreamElements(fragment) {\n  var _iterator3 = _createForOfIteratorHelper(fragment.querySelectorAll(\"turbo-stream\")),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var element = _step3.value;\n      var streamElement = document.importNode(element, true);\n      var _iterator4 = _createForOfIteratorHelper(streamElement.templateElement.content.querySelectorAll(\"script\")),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var inertScriptElement = _step4.value;\n          inertScriptElement.replaceWith(activateScriptElement(inertScriptElement));\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      element.replaceWith(streamElement);\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  return fragment;\n}\nvar FormSubmissionState;\n(function (FormSubmissionState) {\n  FormSubmissionState[FormSubmissionState[\"initialized\"] = 0] = \"initialized\";\n  FormSubmissionState[FormSubmissionState[\"requesting\"] = 1] = \"requesting\";\n  FormSubmissionState[FormSubmissionState[\"waiting\"] = 2] = \"waiting\";\n  FormSubmissionState[FormSubmissionState[\"receiving\"] = 3] = \"receiving\";\n  FormSubmissionState[FormSubmissionState[\"stopping\"] = 4] = \"stopping\";\n  FormSubmissionState[FormSubmissionState[\"stopped\"] = 5] = \"stopped\";\n})(FormSubmissionState || (FormSubmissionState = {}));\nvar FormEnctype;\n(function (FormEnctype) {\n  FormEnctype[\"urlEncoded\"] = \"application/x-www-form-urlencoded\";\n  FormEnctype[\"multipart\"] = \"multipart/form-data\";\n  FormEnctype[\"plain\"] = \"text/plain\";\n})(FormEnctype || (FormEnctype = {}));\nfunction formEnctypeFromString(encoding) {\n  switch (encoding.toLowerCase()) {\n    case FormEnctype.multipart:\n      return FormEnctype.multipart;\n    case FormEnctype.plain:\n      return FormEnctype.plain;\n    default:\n      return FormEnctype.urlEncoded;\n  }\n}\nvar FormSubmission = /*#__PURE__*/function () {\n  function FormSubmission(delegate, formElement, submitter) {\n    var mustRedirect = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    _classCallCheck(this, FormSubmission);\n    this.state = FormSubmissionState.initialized;\n    this.delegate = delegate;\n    this.formElement = formElement;\n    this.submitter = submitter;\n    this.formData = buildFormData(formElement, submitter);\n    this.location = expandURL(this.action);\n    if (this.method == FetchMethod.get) {\n      mergeFormDataEntries(this.location, _toConsumableArray(this.body.entries()));\n    }\n    this.fetchRequest = new FetchRequest(this, this.method, this.location, this.body, this.formElement);\n    this.mustRedirect = mustRedirect;\n  }\n  _createClass(FormSubmission, [{\n    key: \"method\",\n    get: function get() {\n      var _a;\n      var method = ((_a = this.submitter) === null || _a === void 0 ? void 0 : _a.getAttribute(\"formmethod\")) || this.formElement.getAttribute(\"method\") || \"\";\n      return fetchMethodFromString(method.toLowerCase()) || FetchMethod.get;\n    }\n  }, {\n    key: \"action\",\n    get: function get() {\n      var _a;\n      var formElementAction = typeof this.formElement.action === \"string\" ? this.formElement.action : null;\n      if ((_a = this.submitter) === null || _a === void 0 ? void 0 : _a.hasAttribute(\"formaction\")) {\n        return this.submitter.getAttribute(\"formaction\") || \"\";\n      } else {\n        return this.formElement.getAttribute(\"action\") || formElementAction || \"\";\n      }\n    }\n  }, {\n    key: \"body\",\n    get: function get() {\n      if (this.enctype == FormEnctype.urlEncoded || this.method == FetchMethod.get) {\n        return new URLSearchParams(this.stringFormData);\n      } else {\n        return this.formData;\n      }\n    }\n  }, {\n    key: \"enctype\",\n    get: function get() {\n      var _a;\n      return formEnctypeFromString(((_a = this.submitter) === null || _a === void 0 ? void 0 : _a.getAttribute(\"formenctype\")) || this.formElement.enctype);\n    }\n  }, {\n    key: \"isIdempotent\",\n    get: function get() {\n      return this.fetchRequest.isIdempotent;\n    }\n  }, {\n    key: \"stringFormData\",\n    get: function get() {\n      return _toConsumableArray(this.formData).reduce(function (entries, _ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n          name = _ref4[0],\n          value = _ref4[1];\n        return entries.concat(typeof value == \"string\" ? [[name, value]] : []);\n      }, []);\n    }\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _FormSubmissionState, initialized, requesting, confirmationMessage, answer;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _FormSubmissionState = FormSubmissionState, initialized = _FormSubmissionState.initialized, requesting = _FormSubmissionState.requesting;\n              confirmationMessage = getAttribute(\"data-turbo-confirm\", this.submitter, this.formElement);\n              if (!(typeof confirmationMessage === \"string\")) {\n                _context4.next = 8;\n                break;\n              }\n              _context4.next = 5;\n              return FormSubmission.confirmMethod(confirmationMessage, this.formElement, this.submitter);\n            case 5:\n              answer = _context4.sent;\n              if (answer) {\n                _context4.next = 8;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 8:\n              if (!(this.state == initialized)) {\n                _context4.next = 11;\n                break;\n              }\n              this.state = requesting;\n              return _context4.abrupt(\"return\", this.fetchRequest.perform());\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function start() {\n        return _start.apply(this, arguments);\n      }\n      return start;\n    }()\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var _FormSubmissionState2 = FormSubmissionState,\n        stopping = _FormSubmissionState2.stopping,\n        stopped = _FormSubmissionState2.stopped;\n      if (this.state != stopping && this.state != stopped) {\n        this.state = stopping;\n        this.fetchRequest.cancel();\n        return true;\n      }\n    }\n  }, {\n    key: \"prepareRequest\",\n    value: function prepareRequest(request) {\n      if (!request.isIdempotent) {\n        var token = getCookieValue(getMetaContent(\"csrf-param\")) || getMetaContent(\"csrf-token\");\n        if (token) {\n          request.headers[\"X-CSRF-Token\"] = token;\n        }\n      }\n      if (this.requestAcceptsTurboStreamResponse(request)) {\n        request.acceptResponseType(StreamMessage.contentType);\n      }\n    }\n  }, {\n    key: \"requestStarted\",\n    value: function requestStarted(_request) {\n      var _a;\n      this.state = FormSubmissionState.waiting;\n      (_a = this.submitter) === null || _a === void 0 ? void 0 : _a.setAttribute(\"disabled\", \"\");\n      dispatch(\"turbo:submit-start\", {\n        target: this.formElement,\n        detail: {\n          formSubmission: this\n        }\n      });\n      this.delegate.formSubmissionStarted(this);\n    }\n  }, {\n    key: \"requestPreventedHandlingResponse\",\n    value: function requestPreventedHandlingResponse(request, response) {\n      this.result = {\n        success: response.succeeded,\n        fetchResponse: response\n      };\n    }\n  }, {\n    key: \"requestSucceededWithResponse\",\n    value: function requestSucceededWithResponse(request, response) {\n      if (response.clientError || response.serverError) {\n        this.delegate.formSubmissionFailedWithResponse(this, response);\n      } else if (this.requestMustRedirect(request) && responseSucceededWithoutRedirect(response)) {\n        var error = new Error(\"Form responses must redirect to another location\");\n        this.delegate.formSubmissionErrored(this, error);\n      } else {\n        this.state = FormSubmissionState.receiving;\n        this.result = {\n          success: true,\n          fetchResponse: response\n        };\n        this.delegate.formSubmissionSucceededWithResponse(this, response);\n      }\n    }\n  }, {\n    key: \"requestFailedWithResponse\",\n    value: function requestFailedWithResponse(request, response) {\n      this.result = {\n        success: false,\n        fetchResponse: response\n      };\n      this.delegate.formSubmissionFailedWithResponse(this, response);\n    }\n  }, {\n    key: \"requestErrored\",\n    value: function requestErrored(request, error) {\n      this.result = {\n        success: false,\n        error: error\n      };\n      this.delegate.formSubmissionErrored(this, error);\n    }\n  }, {\n    key: \"requestFinished\",\n    value: function requestFinished(_request) {\n      var _a;\n      this.state = FormSubmissionState.stopped;\n      (_a = this.submitter) === null || _a === void 0 ? void 0 : _a.removeAttribute(\"disabled\");\n      dispatch(\"turbo:submit-end\", {\n        target: this.formElement,\n        detail: Object.assign({\n          formSubmission: this\n        }, this.result)\n      });\n      this.delegate.formSubmissionFinished(this);\n    }\n  }, {\n    key: \"requestMustRedirect\",\n    value: function requestMustRedirect(request) {\n      return !request.isIdempotent && this.mustRedirect;\n    }\n  }, {\n    key: \"requestAcceptsTurboStreamResponse\",\n    value: function requestAcceptsTurboStreamResponse(request) {\n      return !request.isIdempotent || hasAttribute(\"data-turbo-stream\", this.submitter, this.formElement);\n    }\n  }], [{\n    key: \"confirmMethod\",\n    value: function confirmMethod(message, _element, _submitter) {\n      return Promise.resolve(confirm(message));\n    }\n  }]);\n  return FormSubmission;\n}();\nfunction buildFormData(formElement, submitter) {\n  var formData = new FormData(formElement);\n  var name = submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute(\"name\");\n  var value = submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute(\"value\");\n  if (name) {\n    formData.append(name, value || \"\");\n  }\n  return formData;\n}\nfunction getCookieValue(cookieName) {\n  if (cookieName != null) {\n    var cookies = document.cookie ? document.cookie.split(\"; \") : [];\n    var cookie = cookies.find(function (cookie) {\n      return cookie.startsWith(cookieName);\n    });\n    if (cookie) {\n      var value = cookie.split(\"=\").slice(1).join(\"=\");\n      return value ? decodeURIComponent(value) : undefined;\n    }\n  }\n}\nfunction responseSucceededWithoutRedirect(response) {\n  return response.statusCode == 200 && !response.redirected;\n}\nfunction mergeFormDataEntries(url, entries) {\n  var searchParams = new URLSearchParams();\n  var _iterator5 = _createForOfIteratorHelper(entries),\n    _step5;\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var _ref5 = _step5.value;\n      var _ref6 = _slicedToArray(_ref5, 2);\n      var name = _ref6[0];\n      var value = _ref6[1];\n      if (value instanceof File) continue;\n      searchParams.append(name, value);\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  url.search = searchParams.toString();\n  return url;\n}\nvar Snapshot = /*#__PURE__*/function () {\n  function Snapshot(element) {\n    _classCallCheck(this, Snapshot);\n    this.element = element;\n  }\n  _createClass(Snapshot, [{\n    key: \"activeElement\",\n    get: function get() {\n      return this.element.ownerDocument.activeElement;\n    }\n  }, {\n    key: \"children\",\n    get: function get() {\n      return _toConsumableArray(this.element.children);\n    }\n  }, {\n    key: \"hasAnchor\",\n    value: function hasAnchor(anchor) {\n      return this.getElementForAnchor(anchor) != null;\n    }\n  }, {\n    key: \"getElementForAnchor\",\n    value: function getElementForAnchor(anchor) {\n      return anchor ? this.element.querySelector(\"[id='\".concat(anchor, \"'], a[name='\").concat(anchor, \"']\")) : null;\n    }\n  }, {\n    key: \"isConnected\",\n    get: function get() {\n      return this.element.isConnected;\n    }\n  }, {\n    key: \"firstAutofocusableElement\",\n    get: function get() {\n      var inertDisabledOrHidden = \"[inert], :disabled, [hidden], details:not([open]), dialog:not([open])\";\n      var _iterator6 = _createForOfIteratorHelper(this.element.querySelectorAll(\"[autofocus]\")),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var element = _step6.value;\n          if (element.closest(inertDisabledOrHidden) == null) return element;else continue;\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      return null;\n    }\n  }, {\n    key: \"permanentElements\",\n    get: function get() {\n      return queryPermanentElementsAll(this.element);\n    }\n  }, {\n    key: \"getPermanentElementById\",\n    value: function getPermanentElementById(id) {\n      return _getPermanentElementById(this.element, id);\n    }\n  }, {\n    key: \"getPermanentElementMapForSnapshot\",\n    value: function getPermanentElementMapForSnapshot(snapshot) {\n      var permanentElementMap = {};\n      var _iterator7 = _createForOfIteratorHelper(this.permanentElements),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var currentPermanentElement = _step7.value;\n          var id = currentPermanentElement.id;\n          var newPermanentElement = snapshot.getPermanentElementById(id);\n          if (newPermanentElement) {\n            permanentElementMap[id] = [currentPermanentElement, newPermanentElement];\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      return permanentElementMap;\n    }\n  }]);\n  return Snapshot;\n}();\nfunction _getPermanentElementById(node, id) {\n  return node.querySelector(\"#\".concat(id, \"[data-turbo-permanent]\"));\n}\nfunction queryPermanentElementsAll(node) {\n  return node.querySelectorAll(\"[id][data-turbo-permanent]\");\n}\nvar FormSubmitObserver = /*#__PURE__*/function () {\n  function FormSubmitObserver(delegate, eventTarget) {\n    var _this4 = this;\n    _classCallCheck(this, FormSubmitObserver);\n    this.started = false;\n    this.submitCaptured = function () {\n      _this4.eventTarget.removeEventListener(\"submit\", _this4.submitBubbled, false);\n      _this4.eventTarget.addEventListener(\"submit\", _this4.submitBubbled, false);\n    };\n    this.submitBubbled = function (event) {\n      if (!event.defaultPrevented) {\n        var form = event.target instanceof HTMLFormElement ? event.target : undefined;\n        var submitter = event.submitter || undefined;\n        if (form && submissionDoesNotDismissDialog(form, submitter) && submissionDoesNotTargetIFrame(form, submitter) && _this4.delegate.willSubmitForm(form, submitter)) {\n          event.preventDefault();\n          event.stopImmediatePropagation();\n          _this4.delegate.formSubmitted(form, submitter);\n        }\n      }\n    };\n    this.delegate = delegate;\n    this.eventTarget = eventTarget;\n  }\n  _createClass(FormSubmitObserver, [{\n    key: \"start\",\n    value: function start() {\n      if (!this.started) {\n        this.eventTarget.addEventListener(\"submit\", this.submitCaptured, true);\n        this.started = true;\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.started) {\n        this.eventTarget.removeEventListener(\"submit\", this.submitCaptured, true);\n        this.started = false;\n      }\n    }\n  }]);\n  return FormSubmitObserver;\n}();\nfunction submissionDoesNotDismissDialog(form, submitter) {\n  var method = (submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute(\"formmethod\")) || form.getAttribute(\"method\");\n  return method != \"dialog\";\n}\nfunction submissionDoesNotTargetIFrame(form, submitter) {\n  if ((submitter === null || submitter === void 0 ? void 0 : submitter.hasAttribute(\"formtarget\")) || form.hasAttribute(\"target\")) {\n    var target = (submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute(\"formtarget\")) || form.target;\n    var _iterator8 = _createForOfIteratorHelper(document.getElementsByName(target)),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var element = _step8.value;\n        if (element instanceof HTMLIFrameElement) return false;\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    return true;\n  } else {\n    return true;\n  }\n}\nvar View = /*#__PURE__*/function () {\n  function View(delegate, element) {\n    _classCallCheck(this, View);\n    this.resolveRenderPromise = function (_value) {};\n    this.resolveInterceptionPromise = function (_value) {};\n    this.delegate = delegate;\n    this.element = element;\n  }\n  _createClass(View, [{\n    key: \"scrollToAnchor\",\n    value: function scrollToAnchor(anchor) {\n      var element = this.snapshot.getElementForAnchor(anchor);\n      if (element) {\n        this.scrollToElement(element);\n        this.focusElement(element);\n      } else {\n        this.scrollToPosition({\n          x: 0,\n          y: 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToAnchorFromLocation\",\n    value: function scrollToAnchorFromLocation(location) {\n      this.scrollToAnchor(getAnchor(location));\n    }\n  }, {\n    key: \"scrollToElement\",\n    value: function scrollToElement(element) {\n      element.scrollIntoView();\n    }\n  }, {\n    key: \"focusElement\",\n    value: function focusElement(element) {\n      if (element instanceof HTMLElement) {\n        if (element.hasAttribute(\"tabindex\")) {\n          element.focus();\n        } else {\n          element.setAttribute(\"tabindex\", \"-1\");\n          element.focus();\n          element.removeAttribute(\"tabindex\");\n        }\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition(_ref7) {\n      var x = _ref7.x,\n        y = _ref7.y;\n      this.scrollRoot.scrollTo(x, y);\n    }\n  }, {\n    key: \"scrollToTop\",\n    value: function scrollToTop() {\n      this.scrollToPosition({\n        x: 0,\n        y: 0\n      });\n    }\n  }, {\n    key: \"scrollRoot\",\n    get: function get() {\n      return window;\n    }\n  }, {\n    key: \"render\",\n    value: function () {\n      var _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(renderer) {\n        var _this5 = this;\n        var isPreview, shouldRender, snapshot, renderInterception, options, immediateRender;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              isPreview = renderer.isPreview, shouldRender = renderer.shouldRender, snapshot = renderer.newSnapshot;\n              if (!shouldRender) {\n                _context5.next = 25;\n                break;\n              }\n              _context5.prev = 2;\n              this.renderPromise = new Promise(function (resolve) {\n                return _this5.resolveRenderPromise = resolve;\n              });\n              this.renderer = renderer;\n              _context5.next = 7;\n              return this.prepareToRenderSnapshot(renderer);\n            case 7:\n              renderInterception = new Promise(function (resolve) {\n                return _this5.resolveInterceptionPromise = resolve;\n              });\n              options = {\n                resume: this.resolveInterceptionPromise,\n                render: this.renderer.renderElement\n              };\n              immediateRender = this.delegate.allowsImmediateRender(snapshot, options);\n              if (immediateRender) {\n                _context5.next = 13;\n                break;\n              }\n              _context5.next = 13;\n              return renderInterception;\n            case 13:\n              _context5.next = 15;\n              return this.renderSnapshot(renderer);\n            case 15:\n              this.delegate.viewRenderedSnapshot(snapshot, isPreview);\n              this.delegate.preloadOnLoadLinksForView(this.element);\n              this.finishRenderingSnapshot(renderer);\n            case 18:\n              _context5.prev = 18;\n              delete this.renderer;\n              this.resolveRenderPromise(undefined);\n              delete this.renderPromise;\n              return _context5.finish(18);\n            case 23:\n              _context5.next = 26;\n              break;\n            case 25:\n              this.invalidate(renderer.reloadReason);\n            case 26:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[2,, 18, 23]]);\n      }));\n      function render(_x3) {\n        return _render.apply(this, arguments);\n      }\n      return render;\n    }()\n  }, {\n    key: \"invalidate\",\n    value: function invalidate(reason) {\n      this.delegate.viewInvalidated(reason);\n    }\n  }, {\n    key: \"prepareToRenderSnapshot\",\n    value: function () {\n      var _prepareToRenderSnapshot = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(renderer) {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              this.markAsPreview(renderer.isPreview);\n              _context6.next = 3;\n              return renderer.prepareToRender();\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function prepareToRenderSnapshot(_x4) {\n        return _prepareToRenderSnapshot.apply(this, arguments);\n      }\n      return prepareToRenderSnapshot;\n    }()\n  }, {\n    key: \"markAsPreview\",\n    value: function markAsPreview(isPreview) {\n      if (isPreview) {\n        this.element.setAttribute(\"data-turbo-preview\", \"\");\n      } else {\n        this.element.removeAttribute(\"data-turbo-preview\");\n      }\n    }\n  }, {\n    key: \"renderSnapshot\",\n    value: function () {\n      var _renderSnapshot = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(renderer) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return renderer.render();\n            case 2:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }));\n      function renderSnapshot(_x5) {\n        return _renderSnapshot.apply(this, arguments);\n      }\n      return renderSnapshot;\n    }()\n  }, {\n    key: \"finishRenderingSnapshot\",\n    value: function finishRenderingSnapshot(renderer) {\n      renderer.finishRendering();\n    }\n  }]);\n  return View;\n}();\nvar FrameView = /*#__PURE__*/function (_View) {\n  _inherits(FrameView, _View);\n  var _super2 = _createSuper(FrameView);\n  function FrameView() {\n    _classCallCheck(this, FrameView);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(FrameView, [{\n    key: \"invalidate\",\n    value: function invalidate() {\n      this.element.innerHTML = \"\";\n    }\n  }, {\n    key: \"snapshot\",\n    get: function get() {\n      return new Snapshot(this.element);\n    }\n  }]);\n  return FrameView;\n}(View);\nvar LinkInterceptor = /*#__PURE__*/function () {\n  function LinkInterceptor(delegate, element) {\n    var _this6 = this;\n    _classCallCheck(this, LinkInterceptor);\n    this.clickBubbled = function (event) {\n      if (_this6.respondsToEventTarget(event.target)) {\n        _this6.clickEvent = event;\n      } else {\n        delete _this6.clickEvent;\n      }\n    };\n    this.linkClicked = function (event) {\n      if (_this6.clickEvent && _this6.respondsToEventTarget(event.target) && event.target instanceof Element) {\n        if (_this6.delegate.shouldInterceptLinkClick(event.target, event.detail.url, event.detail.originalEvent)) {\n          _this6.clickEvent.preventDefault();\n          event.preventDefault();\n          _this6.delegate.linkClickIntercepted(event.target, event.detail.url, event.detail.originalEvent);\n        }\n      }\n      delete _this6.clickEvent;\n    };\n    this.willVisit = function (_event) {\n      delete _this6.clickEvent;\n    };\n    this.delegate = delegate;\n    this.element = element;\n  }\n  _createClass(LinkInterceptor, [{\n    key: \"start\",\n    value: function start() {\n      this.element.addEventListener(\"click\", this.clickBubbled);\n      document.addEventListener(\"turbo:click\", this.linkClicked);\n      document.addEventListener(\"turbo:before-visit\", this.willVisit);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.element.removeEventListener(\"click\", this.clickBubbled);\n      document.removeEventListener(\"turbo:click\", this.linkClicked);\n      document.removeEventListener(\"turbo:before-visit\", this.willVisit);\n    }\n  }, {\n    key: \"respondsToEventTarget\",\n    value: function respondsToEventTarget(target) {\n      var element = target instanceof Element ? target : target instanceof Node ? target.parentElement : null;\n      return element && element.closest(\"turbo-frame, html\") == this.element;\n    }\n  }]);\n  return LinkInterceptor;\n}();\nvar LinkClickObserver = /*#__PURE__*/function () {\n  function LinkClickObserver(delegate, eventTarget) {\n    var _this7 = this;\n    _classCallCheck(this, LinkClickObserver);\n    this.started = false;\n    this.clickCaptured = function () {\n      _this7.eventTarget.removeEventListener(\"click\", _this7.clickBubbled, false);\n      _this7.eventTarget.addEventListener(\"click\", _this7.clickBubbled, false);\n    };\n    this.clickBubbled = function (event) {\n      if (event instanceof MouseEvent && _this7.clickEventIsSignificant(event)) {\n        var target = event.composedPath && event.composedPath()[0] || event.target;\n        var link = _this7.findLinkFromClickTarget(target);\n        if (link && doesNotTargetIFrame(link)) {\n          var _location2 = _this7.getLocationForLink(link);\n          if (_this7.delegate.willFollowLinkToLocation(link, _location2, event)) {\n            event.preventDefault();\n            _this7.delegate.followedLinkToLocation(link, _location2);\n          }\n        }\n      }\n    };\n    this.delegate = delegate;\n    this.eventTarget = eventTarget;\n  }\n  _createClass(LinkClickObserver, [{\n    key: \"start\",\n    value: function start() {\n      if (!this.started) {\n        this.eventTarget.addEventListener(\"click\", this.clickCaptured, true);\n        this.started = true;\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.started) {\n        this.eventTarget.removeEventListener(\"click\", this.clickCaptured, true);\n        this.started = false;\n      }\n    }\n  }, {\n    key: \"clickEventIsSignificant\",\n    value: function clickEventIsSignificant(event) {\n      return !(event.target && event.target.isContentEditable || event.defaultPrevented || event.which > 1 || event.altKey || event.ctrlKey || event.metaKey || event.shiftKey);\n    }\n  }, {\n    key: \"findLinkFromClickTarget\",\n    value: function findLinkFromClickTarget(target) {\n      return findClosestRecursively(target, \"a[href]:not([target^=_]):not([download])\");\n    }\n  }, {\n    key: \"getLocationForLink\",\n    value: function getLocationForLink(link) {\n      return expandURL(link.getAttribute(\"href\") || \"\");\n    }\n  }]);\n  return LinkClickObserver;\n}();\nfunction doesNotTargetIFrame(anchor) {\n  if (anchor.hasAttribute(\"target\")) {\n    var _iterator9 = _createForOfIteratorHelper(document.getElementsByName(anchor.target)),\n      _step9;\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var element = _step9.value;\n        if (element instanceof HTMLIFrameElement) return false;\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n    return true;\n  } else {\n    return true;\n  }\n}\nvar FormLinkClickObserver = /*#__PURE__*/function () {\n  function FormLinkClickObserver(delegate, element) {\n    _classCallCheck(this, FormLinkClickObserver);\n    this.delegate = delegate;\n    this.linkInterceptor = new LinkClickObserver(this, element);\n  }\n  _createClass(FormLinkClickObserver, [{\n    key: \"start\",\n    value: function start() {\n      this.linkInterceptor.start();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.linkInterceptor.stop();\n    }\n  }, {\n    key: \"willFollowLinkToLocation\",\n    value: function willFollowLinkToLocation(link, location, originalEvent) {\n      return this.delegate.willSubmitFormLinkToLocation(link, location, originalEvent) && link.hasAttribute(\"data-turbo-method\");\n    }\n  }, {\n    key: \"followedLinkToLocation\",\n    value: function followedLinkToLocation(link, location) {\n      var form = document.createElement(\"form\");\n      var type = \"hidden\";\n      var _iterator10 = _createForOfIteratorHelper(location.searchParams),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var _ref8 = _step10.value;\n          var _ref9 = _slicedToArray(_ref8, 2);\n          var name = _ref9[0];\n          var value = _ref9[1];\n          form.append(Object.assign(document.createElement(\"input\"), {\n            type: type,\n            name: name,\n            value: value\n          }));\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n      var action = Object.assign(location, {\n        search: \"\"\n      });\n      form.setAttribute(\"data-turbo\", \"true\");\n      form.setAttribute(\"action\", action.href);\n      form.setAttribute(\"hidden\", \"\");\n      var method = link.getAttribute(\"data-turbo-method\");\n      if (method) form.setAttribute(\"method\", method);\n      var turboFrame = link.getAttribute(\"data-turbo-frame\");\n      if (turboFrame) form.setAttribute(\"data-turbo-frame\", turboFrame);\n      var turboAction = getVisitAction(link);\n      if (turboAction) form.setAttribute(\"data-turbo-action\", turboAction);\n      var turboConfirm = link.getAttribute(\"data-turbo-confirm\");\n      if (turboConfirm) form.setAttribute(\"data-turbo-confirm\", turboConfirm);\n      var turboStream = link.hasAttribute(\"data-turbo-stream\");\n      if (turboStream) form.setAttribute(\"data-turbo-stream\", \"\");\n      this.delegate.submittedFormLinkToLocation(link, location, form);\n      document.body.appendChild(form);\n      form.addEventListener(\"turbo:submit-end\", function () {\n        return form.remove();\n      }, {\n        once: true\n      });\n      requestAnimationFrame(function () {\n        return form.requestSubmit();\n      });\n    }\n  }]);\n  return FormLinkClickObserver;\n}();\nvar Bardo = /*#__PURE__*/function () {\n  function Bardo(delegate, permanentElementMap) {\n    _classCallCheck(this, Bardo);\n    this.delegate = delegate;\n    this.permanentElementMap = permanentElementMap;\n  }\n  _createClass(Bardo, [{\n    key: \"enter\",\n    value: function enter() {\n      for (var id in this.permanentElementMap) {\n        var _this$permanentElemen = _slicedToArray(this.permanentElementMap[id], 2),\n          currentPermanentElement = _this$permanentElemen[0],\n          newPermanentElement = _this$permanentElemen[1];\n        this.delegate.enteringBardo(currentPermanentElement, newPermanentElement);\n        this.replaceNewPermanentElementWithPlaceholder(newPermanentElement);\n      }\n    }\n  }, {\n    key: \"leave\",\n    value: function leave() {\n      for (var id in this.permanentElementMap) {\n        var _this$permanentElemen2 = _slicedToArray(this.permanentElementMap[id], 1),\n          currentPermanentElement = _this$permanentElemen2[0];\n        this.replaceCurrentPermanentElementWithClone(currentPermanentElement);\n        this.replacePlaceholderWithPermanentElement(currentPermanentElement);\n        this.delegate.leavingBardo(currentPermanentElement);\n      }\n    }\n  }, {\n    key: \"replaceNewPermanentElementWithPlaceholder\",\n    value: function replaceNewPermanentElementWithPlaceholder(permanentElement) {\n      var placeholder = createPlaceholderForPermanentElement(permanentElement);\n      permanentElement.replaceWith(placeholder);\n    }\n  }, {\n    key: \"replaceCurrentPermanentElementWithClone\",\n    value: function replaceCurrentPermanentElementWithClone(permanentElement) {\n      var clone = permanentElement.cloneNode(true);\n      permanentElement.replaceWith(clone);\n    }\n  }, {\n    key: \"replacePlaceholderWithPermanentElement\",\n    value: function replacePlaceholderWithPermanentElement(permanentElement) {\n      var placeholder = this.getPlaceholderById(permanentElement.id);\n      placeholder === null || placeholder === void 0 ? void 0 : placeholder.replaceWith(permanentElement);\n    }\n  }, {\n    key: \"getPlaceholderById\",\n    value: function getPlaceholderById(id) {\n      return this.placeholders.find(function (element) {\n        return element.content == id;\n      });\n    }\n  }, {\n    key: \"placeholders\",\n    get: function get() {\n      return _toConsumableArray(document.querySelectorAll(\"meta[name=turbo-permanent-placeholder][content]\"));\n    }\n  }], [{\n    key: \"preservingPermanentElements\",\n    value: function () {\n      var _preservingPermanentElements = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(delegate, permanentElementMap, callback) {\n        var bardo;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              bardo = new this(delegate, permanentElementMap);\n              bardo.enter();\n              _context8.next = 4;\n              return callback();\n            case 4:\n              bardo.leave();\n            case 5:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function preservingPermanentElements(_x6, _x7, _x8) {\n        return _preservingPermanentElements.apply(this, arguments);\n      }\n      return preservingPermanentElements;\n    }()\n  }]);\n  return Bardo;\n}();\nfunction createPlaceholderForPermanentElement(permanentElement) {\n  var element = document.createElement(\"meta\");\n  element.setAttribute(\"name\", \"turbo-permanent-placeholder\");\n  element.setAttribute(\"content\", permanentElement.id);\n  return element;\n}\nvar Renderer = /*#__PURE__*/function () {\n  function Renderer(currentSnapshot, newSnapshot, renderElement, isPreview) {\n    var _this8 = this;\n    var willRender = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    _classCallCheck(this, Renderer);\n    this.activeElement = null;\n    this.currentSnapshot = currentSnapshot;\n    this.newSnapshot = newSnapshot;\n    this.isPreview = isPreview;\n    this.willRender = willRender;\n    this.renderElement = renderElement;\n    this.promise = new Promise(function (resolve, reject) {\n      return _this8.resolvingFunctions = {\n        resolve: resolve,\n        reject: reject\n      };\n    });\n  }\n  _createClass(Renderer, [{\n    key: \"shouldRender\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"reloadReason\",\n    get: function get() {\n      return;\n    }\n  }, {\n    key: \"prepareToRender\",\n    value: function prepareToRender() {\n      return;\n    }\n  }, {\n    key: \"finishRendering\",\n    value: function finishRendering() {\n      if (this.resolvingFunctions) {\n        this.resolvingFunctions.resolve();\n        delete this.resolvingFunctions;\n      }\n    }\n  }, {\n    key: \"preservingPermanentElements\",\n    value: function () {\n      var _preservingPermanentElements2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(callback) {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return Bardo.preservingPermanentElements(this, this.permanentElementMap, callback);\n            case 2:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function preservingPermanentElements(_x9) {\n        return _preservingPermanentElements2.apply(this, arguments);\n      }\n      return preservingPermanentElements;\n    }()\n  }, {\n    key: \"focusFirstAutofocusableElement\",\n    value: function focusFirstAutofocusableElement() {\n      var element = this.connectedSnapshot.firstAutofocusableElement;\n      if (elementIsFocusable(element)) {\n        element.focus();\n      }\n    }\n  }, {\n    key: \"enteringBardo\",\n    value: function enteringBardo(currentPermanentElement) {\n      if (this.activeElement) return;\n      if (currentPermanentElement.contains(this.currentSnapshot.activeElement)) {\n        this.activeElement = this.currentSnapshot.activeElement;\n      }\n    }\n  }, {\n    key: \"leavingBardo\",\n    value: function leavingBardo(currentPermanentElement) {\n      if (currentPermanentElement.contains(this.activeElement) && this.activeElement instanceof HTMLElement) {\n        this.activeElement.focus();\n        this.activeElement = null;\n      }\n    }\n  }, {\n    key: \"connectedSnapshot\",\n    get: function get() {\n      return this.newSnapshot.isConnected ? this.newSnapshot : this.currentSnapshot;\n    }\n  }, {\n    key: \"currentElement\",\n    get: function get() {\n      return this.currentSnapshot.element;\n    }\n  }, {\n    key: \"newElement\",\n    get: function get() {\n      return this.newSnapshot.element;\n    }\n  }, {\n    key: \"permanentElementMap\",\n    get: function get() {\n      return this.currentSnapshot.getPermanentElementMapForSnapshot(this.newSnapshot);\n    }\n  }]);\n  return Renderer;\n}();\nfunction elementIsFocusable(element) {\n  return element && typeof element.focus == \"function\";\n}\nvar FrameRenderer = /*#__PURE__*/function (_Renderer) {\n  _inherits(FrameRenderer, _Renderer);\n  var _super3 = _createSuper(FrameRenderer);\n  function FrameRenderer(delegate, currentSnapshot, newSnapshot, renderElement, isPreview) {\n    var _this9;\n    var willRender = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n    _classCallCheck(this, FrameRenderer);\n    _this9 = _super3.call(this, currentSnapshot, newSnapshot, renderElement, isPreview, willRender);\n    _this9.delegate = delegate;\n    return _this9;\n  }\n  _createClass(FrameRenderer, [{\n    key: \"shouldRender\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function () {\n      var _render2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var _this10 = this;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return nextAnimationFrame();\n            case 2:\n              this.preservingPermanentElements(function () {\n                _this10.loadFrameElement();\n              });\n              this.scrollFrameIntoView();\n              _context10.next = 6;\n              return nextAnimationFrame();\n            case 6:\n              this.focusFirstAutofocusableElement();\n              _context10.next = 9;\n              return nextAnimationFrame();\n            case 9:\n              this.activateScriptElements();\n            case 10:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function render() {\n        return _render2.apply(this, arguments);\n      }\n      return render;\n    }()\n  }, {\n    key: \"loadFrameElement\",\n    value: function loadFrameElement() {\n      this.delegate.willRenderFrame(this.currentElement, this.newElement);\n      this.renderElement(this.currentElement, this.newElement);\n    }\n  }, {\n    key: \"scrollFrameIntoView\",\n    value: function scrollFrameIntoView() {\n      if (this.currentElement.autoscroll || this.newElement.autoscroll) {\n        var element = this.currentElement.firstElementChild;\n        var block = readScrollLogicalPosition(this.currentElement.getAttribute(\"data-autoscroll-block\"), \"end\");\n        var behavior = readScrollBehavior(this.currentElement.getAttribute(\"data-autoscroll-behavior\"), \"auto\");\n        if (element) {\n          element.scrollIntoView({\n            block: block,\n            behavior: behavior\n          });\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"activateScriptElements\",\n    value: function activateScriptElements() {\n      var _iterator11 = _createForOfIteratorHelper(this.newScriptElements),\n        _step11;\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var inertScriptElement = _step11.value;\n          var activatedScriptElement = activateScriptElement(inertScriptElement);\n          inertScriptElement.replaceWith(activatedScriptElement);\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n    }\n  }, {\n    key: \"newScriptElements\",\n    get: function get() {\n      return this.currentElement.querySelectorAll(\"script\");\n    }\n  }], [{\n    key: \"renderElement\",\n    value: function renderElement(currentElement, newElement) {\n      var _a;\n      var destinationRange = document.createRange();\n      destinationRange.selectNodeContents(currentElement);\n      destinationRange.deleteContents();\n      var frameElement = newElement;\n      var sourceRange = (_a = frameElement.ownerDocument) === null || _a === void 0 ? void 0 : _a.createRange();\n      if (sourceRange) {\n        sourceRange.selectNodeContents(frameElement);\n        currentElement.appendChild(sourceRange.extractContents());\n      }\n    }\n  }]);\n  return FrameRenderer;\n}(Renderer);\nfunction readScrollLogicalPosition(value, defaultValue) {\n  if (value == \"end\" || value == \"start\" || value == \"center\" || value == \"nearest\") {\n    return value;\n  } else {\n    return defaultValue;\n  }\n}\nfunction readScrollBehavior(value, defaultValue) {\n  if (value == \"auto\" || value == \"smooth\") {\n    return value;\n  } else {\n    return defaultValue;\n  }\n}\nvar ProgressBar = /*#__PURE__*/function () {\n  function ProgressBar() {\n    var _this11 = this;\n    _classCallCheck(this, ProgressBar);\n    this.hiding = false;\n    this.value = 0;\n    this.visible = false;\n    this.trickle = function () {\n      _this11.setValue(_this11.value + Math.random() / 100);\n    };\n    this.stylesheetElement = this.createStylesheetElement();\n    this.progressElement = this.createProgressElement();\n    this.installStylesheetElement();\n    this.setValue(0);\n  }\n  _createClass(ProgressBar, [{\n    key: \"show\",\n    value: function show() {\n      if (!this.visible) {\n        this.visible = true;\n        this.installProgressElement();\n        this.startTrickling();\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var _this12 = this;\n      if (this.visible && !this.hiding) {\n        this.hiding = true;\n        this.fadeProgressElement(function () {\n          _this12.uninstallProgressElement();\n          _this12.stopTrickling();\n          _this12.visible = false;\n          _this12.hiding = false;\n        });\n      }\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      this.value = value;\n      this.refresh();\n    }\n  }, {\n    key: \"installStylesheetElement\",\n    value: function installStylesheetElement() {\n      document.head.insertBefore(this.stylesheetElement, document.head.firstChild);\n    }\n  }, {\n    key: \"installProgressElement\",\n    value: function installProgressElement() {\n      this.progressElement.style.width = \"0\";\n      this.progressElement.style.opacity = \"1\";\n      document.documentElement.insertBefore(this.progressElement, document.body);\n      this.refresh();\n    }\n  }, {\n    key: \"fadeProgressElement\",\n    value: function fadeProgressElement(callback) {\n      this.progressElement.style.opacity = \"0\";\n      setTimeout(callback, ProgressBar.animationDuration * 1.5);\n    }\n  }, {\n    key: \"uninstallProgressElement\",\n    value: function uninstallProgressElement() {\n      if (this.progressElement.parentNode) {\n        document.documentElement.removeChild(this.progressElement);\n      }\n    }\n  }, {\n    key: \"startTrickling\",\n    value: function startTrickling() {\n      if (!this.trickleInterval) {\n        this.trickleInterval = window.setInterval(this.trickle, ProgressBar.animationDuration);\n      }\n    }\n  }, {\n    key: \"stopTrickling\",\n    value: function stopTrickling() {\n      window.clearInterval(this.trickleInterval);\n      delete this.trickleInterval;\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var _this13 = this;\n      requestAnimationFrame(function () {\n        _this13.progressElement.style.width = \"\".concat(10 + _this13.value * 90, \"%\");\n      });\n    }\n  }, {\n    key: \"createStylesheetElement\",\n    value: function createStylesheetElement() {\n      var element = document.createElement(\"style\");\n      element.type = \"text/css\";\n      element.textContent = ProgressBar.defaultCSS;\n      if (this.cspNonce) {\n        element.nonce = this.cspNonce;\n      }\n      return element;\n    }\n  }, {\n    key: \"createProgressElement\",\n    value: function createProgressElement() {\n      var element = document.createElement(\"div\");\n      element.className = \"turbo-progress-bar\";\n      return element;\n    }\n  }, {\n    key: \"cspNonce\",\n    get: function get() {\n      return getMetaContent(\"csp-nonce\");\n    }\n  }], [{\n    key: \"defaultCSS\",\n    get: function get() {\n      return unindent(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      .turbo-progress-bar {\\n        position: fixed;\\n        display: block;\\n        top: 0;\\n        left: 0;\\n        height: 3px;\\n        background: #0076ff;\\n        z-index: 2147483647;\\n        transition:\\n          width \", \"ms ease-out,\\n          opacity \", \"ms \", \"ms ease-in;\\n        transform: translate3d(0, 0, 0);\\n      }\\n    \"])), ProgressBar.animationDuration, ProgressBar.animationDuration / 2, ProgressBar.animationDuration / 2);\n    }\n  }]);\n  return ProgressBar;\n}();\nProgressBar.animationDuration = 300;\nvar HeadSnapshot = /*#__PURE__*/function (_Snapshot) {\n  _inherits(HeadSnapshot, _Snapshot);\n  var _super4 = _createSuper(HeadSnapshot);\n  function HeadSnapshot() {\n    var _this14;\n    _classCallCheck(this, HeadSnapshot);\n    _this14 = _super4.apply(this, arguments);\n    _this14.detailsByOuterHTML = _this14.children.filter(function (element) {\n      return !elementIsNoscript(element);\n    }).map(function (element) {\n      return elementWithoutNonce(element);\n    }).reduce(function (result, element) {\n      var outerHTML = element.outerHTML;\n      var details = outerHTML in result ? result[outerHTML] : {\n        type: elementType(element),\n        tracked: elementIsTracked(element),\n        elements: []\n      };\n      return Object.assign(Object.assign({}, result), _defineProperty({}, outerHTML, Object.assign(Object.assign({}, details), {\n        elements: [].concat(_toConsumableArray(details.elements), [element])\n      })));\n    }, {});\n    return _this14;\n  }\n  _createClass(HeadSnapshot, [{\n    key: \"trackedElementSignature\",\n    get: function get() {\n      var _this15 = this;\n      return Object.keys(this.detailsByOuterHTML).filter(function (outerHTML) {\n        return _this15.detailsByOuterHTML[outerHTML].tracked;\n      }).join(\"\");\n    }\n  }, {\n    key: \"getScriptElementsNotInSnapshot\",\n    value: function getScriptElementsNotInSnapshot(snapshot) {\n      return this.getElementsMatchingTypeNotInSnapshot(\"script\", snapshot);\n    }\n  }, {\n    key: \"getStylesheetElementsNotInSnapshot\",\n    value: function getStylesheetElementsNotInSnapshot(snapshot) {\n      return this.getElementsMatchingTypeNotInSnapshot(\"stylesheet\", snapshot);\n    }\n  }, {\n    key: \"getElementsMatchingTypeNotInSnapshot\",\n    value: function getElementsMatchingTypeNotInSnapshot(matchedType, snapshot) {\n      var _this16 = this;\n      return Object.keys(this.detailsByOuterHTML).filter(function (outerHTML) {\n        return !(outerHTML in snapshot.detailsByOuterHTML);\n      }).map(function (outerHTML) {\n        return _this16.detailsByOuterHTML[outerHTML];\n      }).filter(function (_ref10) {\n        var type = _ref10.type;\n        return type == matchedType;\n      }).map(function (_ref11) {\n        var _ref11$elements = _slicedToArray(_ref11.elements, 1),\n          element = _ref11$elements[0];\n        return element;\n      });\n    }\n  }, {\n    key: \"provisionalElements\",\n    get: function get() {\n      var _this17 = this;\n      return Object.keys(this.detailsByOuterHTML).reduce(function (result, outerHTML) {\n        var _this17$detailsByOute = _this17.detailsByOuterHTML[outerHTML],\n          type = _this17$detailsByOute.type,\n          tracked = _this17$detailsByOute.tracked,\n          elements = _this17$detailsByOute.elements;\n        if (type == null && !tracked) {\n          return [].concat(_toConsumableArray(result), _toConsumableArray(elements));\n        } else if (elements.length > 1) {\n          return [].concat(_toConsumableArray(result), _toConsumableArray(elements.slice(1)));\n        } else {\n          return result;\n        }\n      }, []);\n    }\n  }, {\n    key: \"getMetaValue\",\n    value: function getMetaValue(name) {\n      var element = this.findMetaElementByName(name);\n      return element ? element.getAttribute(\"content\") : null;\n    }\n  }, {\n    key: \"findMetaElementByName\",\n    value: function findMetaElementByName(name) {\n      var _this18 = this;\n      return Object.keys(this.detailsByOuterHTML).reduce(function (result, outerHTML) {\n        var _this18$detailsByOute = _slicedToArray(_this18.detailsByOuterHTML[outerHTML].elements, 1),\n          element = _this18$detailsByOute[0];\n        return elementIsMetaElementWithName(element, name) ? element : result;\n      }, undefined);\n    }\n  }]);\n  return HeadSnapshot;\n}(Snapshot);\nfunction elementType(element) {\n  if (elementIsScript(element)) {\n    return \"script\";\n  } else if (elementIsStylesheet(element)) {\n    return \"stylesheet\";\n  }\n}\nfunction elementIsTracked(element) {\n  return element.getAttribute(\"data-turbo-track\") == \"reload\";\n}\nfunction elementIsScript(element) {\n  var tagName = element.localName;\n  return tagName == \"script\";\n}\nfunction elementIsNoscript(element) {\n  var tagName = element.localName;\n  return tagName == \"noscript\";\n}\nfunction elementIsStylesheet(element) {\n  var tagName = element.localName;\n  return tagName == \"style\" || tagName == \"link\" && element.getAttribute(\"rel\") == \"stylesheet\";\n}\nfunction elementIsMetaElementWithName(element, name) {\n  var tagName = element.localName;\n  return tagName == \"meta\" && element.getAttribute(\"name\") == name;\n}\nfunction elementWithoutNonce(element) {\n  if (element.hasAttribute(\"nonce\")) {\n    element.setAttribute(\"nonce\", \"\");\n  }\n  return element;\n}\nvar PageSnapshot = /*#__PURE__*/function (_Snapshot2) {\n  _inherits(PageSnapshot, _Snapshot2);\n  var _super5 = _createSuper(PageSnapshot);\n  function PageSnapshot(element, headSnapshot) {\n    var _this19;\n    _classCallCheck(this, PageSnapshot);\n    _this19 = _super5.call(this, element);\n    _this19.headSnapshot = headSnapshot;\n    return _this19;\n  }\n  _createClass(PageSnapshot, [{\n    key: \"clone\",\n    value: function clone() {\n      var clonedElement = this.element.cloneNode(true);\n      var selectElements = this.element.querySelectorAll(\"select\");\n      var clonedSelectElements = clonedElement.querySelectorAll(\"select\");\n      var _iterator12 = _createForOfIteratorHelper(selectElements.entries()),\n        _step12;\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var _ref12 = _step12.value;\n          var _ref13 = _slicedToArray(_ref12, 2);\n          var index = _ref13[0];\n          var source = _ref13[1];\n          var clone = clonedSelectElements[index];\n          var _iterator14 = _createForOfIteratorHelper(clone.selectedOptions),\n            _step14;\n          try {\n            for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n              var option = _step14.value;\n              option.selected = false;\n            }\n          } catch (err) {\n            _iterator14.e(err);\n          } finally {\n            _iterator14.f();\n          }\n          var _iterator15 = _createForOfIteratorHelper(source.selectedOptions),\n            _step15;\n          try {\n            for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n              var _option = _step15.value;\n              clone.options[_option.index].selected = true;\n            }\n          } catch (err) {\n            _iterator15.e(err);\n          } finally {\n            _iterator15.f();\n          }\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n      var _iterator13 = _createForOfIteratorHelper(clonedElement.querySelectorAll('input[type=\"password\"]')),\n        _step13;\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var clonedPasswordInput = _step13.value;\n          clonedPasswordInput.value = \"\";\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n      return new PageSnapshot(clonedElement, this.headSnapshot);\n    }\n  }, {\n    key: \"headElement\",\n    get: function get() {\n      return this.headSnapshot.element;\n    }\n  }, {\n    key: \"rootLocation\",\n    get: function get() {\n      var _a;\n      var root = (_a = this.getSetting(\"root\")) !== null && _a !== void 0 ? _a : \"/\";\n      return expandURL(root);\n    }\n  }, {\n    key: \"cacheControlValue\",\n    get: function get() {\n      return this.getSetting(\"cache-control\");\n    }\n  }, {\n    key: \"isPreviewable\",\n    get: function get() {\n      return this.cacheControlValue != \"no-preview\";\n    }\n  }, {\n    key: \"isCacheable\",\n    get: function get() {\n      return this.cacheControlValue != \"no-cache\";\n    }\n  }, {\n    key: \"isVisitable\",\n    get: function get() {\n      return this.getSetting(\"visit-control\") != \"reload\";\n    }\n  }, {\n    key: \"getSetting\",\n    value: function getSetting(name) {\n      return this.headSnapshot.getMetaValue(\"turbo-\".concat(name));\n    }\n  }], [{\n    key: \"fromHTMLString\",\n    value: function fromHTMLString() {\n      var html = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      return this.fromDocument(parseHTMLDocument(html));\n    }\n  }, {\n    key: \"fromElement\",\n    value: function fromElement(element) {\n      return this.fromDocument(element.ownerDocument);\n    }\n  }, {\n    key: \"fromDocument\",\n    value: function fromDocument(_ref14) {\n      var head = _ref14.head,\n        body = _ref14.body;\n      return new this(body, new HeadSnapshot(head));\n    }\n  }]);\n  return PageSnapshot;\n}(Snapshot);\nvar TimingMetric;\n(function (TimingMetric) {\n  TimingMetric[\"visitStart\"] = \"visitStart\";\n  TimingMetric[\"requestStart\"] = \"requestStart\";\n  TimingMetric[\"requestEnd\"] = \"requestEnd\";\n  TimingMetric[\"visitEnd\"] = \"visitEnd\";\n})(TimingMetric || (TimingMetric = {}));\nvar VisitState;\n(function (VisitState) {\n  VisitState[\"initialized\"] = \"initialized\";\n  VisitState[\"started\"] = \"started\";\n  VisitState[\"canceled\"] = \"canceled\";\n  VisitState[\"failed\"] = \"failed\";\n  VisitState[\"completed\"] = \"completed\";\n})(VisitState || (VisitState = {}));\nvar defaultOptions = {\n  action: \"advance\",\n  historyChanged: false,\n  visitCachedSnapshot: function visitCachedSnapshot() {},\n  willRender: true,\n  updateHistory: true,\n  shouldCacheSnapshot: true,\n  acceptsStreamResponse: false\n};\nvar SystemStatusCode;\n(function (SystemStatusCode) {\n  SystemStatusCode[SystemStatusCode[\"networkFailure\"] = 0] = \"networkFailure\";\n  SystemStatusCode[SystemStatusCode[\"timeoutFailure\"] = -1] = \"timeoutFailure\";\n  SystemStatusCode[SystemStatusCode[\"contentTypeMismatch\"] = -2] = \"contentTypeMismatch\";\n})(SystemStatusCode || (SystemStatusCode = {}));\nvar Visit = /*#__PURE__*/function () {\n  function Visit(delegate, location, restorationIdentifier) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    _classCallCheck(this, Visit);\n    this.identifier = uuid();\n    this.timingMetrics = {};\n    this.followedRedirect = false;\n    this.historyChanged = false;\n    this.scrolled = false;\n    this.shouldCacheSnapshot = true;\n    this.acceptsStreamResponse = false;\n    this.snapshotCached = false;\n    this.state = VisitState.initialized;\n    this.delegate = delegate;\n    this.location = location;\n    this.restorationIdentifier = restorationIdentifier || uuid();\n    var _Object$assign2 = Object.assign(Object.assign({}, defaultOptions), options),\n      action = _Object$assign2.action,\n      historyChanged = _Object$assign2.historyChanged,\n      referrer = _Object$assign2.referrer,\n      snapshot = _Object$assign2.snapshot,\n      snapshotHTML = _Object$assign2.snapshotHTML,\n      response = _Object$assign2.response,\n      visitCachedSnapshot = _Object$assign2.visitCachedSnapshot,\n      willRender = _Object$assign2.willRender,\n      updateHistory = _Object$assign2.updateHistory,\n      shouldCacheSnapshot = _Object$assign2.shouldCacheSnapshot,\n      acceptsStreamResponse = _Object$assign2.acceptsStreamResponse;\n    this.action = action;\n    this.historyChanged = historyChanged;\n    this.referrer = referrer;\n    this.snapshot = snapshot;\n    this.snapshotHTML = snapshotHTML;\n    this.response = response;\n    this.isSamePage = this.delegate.locationWithActionIsSamePage(this.location, this.action);\n    this.visitCachedSnapshot = visitCachedSnapshot;\n    this.willRender = willRender;\n    this.updateHistory = updateHistory;\n    this.scrolled = !willRender;\n    this.shouldCacheSnapshot = shouldCacheSnapshot;\n    this.acceptsStreamResponse = acceptsStreamResponse;\n  }\n  _createClass(Visit, [{\n    key: \"adapter\",\n    get: function get() {\n      return this.delegate.adapter;\n    }\n  }, {\n    key: \"view\",\n    get: function get() {\n      return this.delegate.view;\n    }\n  }, {\n    key: \"history\",\n    get: function get() {\n      return this.delegate.history;\n    }\n  }, {\n    key: \"restorationData\",\n    get: function get() {\n      return this.history.getRestorationDataForIdentifier(this.restorationIdentifier);\n    }\n  }, {\n    key: \"silent\",\n    get: function get() {\n      return this.isSamePage;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      if (this.state == VisitState.initialized) {\n        this.recordTimingMetric(TimingMetric.visitStart);\n        this.state = VisitState.started;\n        this.adapter.visitStarted(this);\n        this.delegate.visitStarted(this);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this.state == VisitState.started) {\n        if (this.request) {\n          this.request.cancel();\n        }\n        this.cancelRender();\n        this.state = VisitState.canceled;\n      }\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      if (this.state == VisitState.started) {\n        this.recordTimingMetric(TimingMetric.visitEnd);\n        this.state = VisitState.completed;\n        this.followRedirect();\n        if (!this.followedRedirect) {\n          this.adapter.visitCompleted(this);\n          this.delegate.visitCompleted(this);\n        }\n      }\n    }\n  }, {\n    key: \"fail\",\n    value: function fail() {\n      if (this.state == VisitState.started) {\n        this.state = VisitState.failed;\n        this.adapter.visitFailed(this);\n      }\n    }\n  }, {\n    key: \"changeHistory\",\n    value: function changeHistory() {\n      var _a;\n      if (!this.historyChanged && this.updateHistory) {\n        var actionForHistory = this.location.href === ((_a = this.referrer) === null || _a === void 0 ? void 0 : _a.href) ? \"replace\" : this.action;\n        var method = getHistoryMethodForAction(actionForHistory);\n        this.history.update(method, this.location, this.restorationIdentifier);\n        this.historyChanged = true;\n      }\n    }\n  }, {\n    key: \"issueRequest\",\n    value: function issueRequest() {\n      if (this.hasPreloadedResponse()) {\n        this.simulateRequest();\n      } else if (this.shouldIssueRequest() && !this.request) {\n        this.request = new FetchRequest(this, FetchMethod.get, this.location);\n        this.request.perform();\n      }\n    }\n  }, {\n    key: \"simulateRequest\",\n    value: function simulateRequest() {\n      if (this.response) {\n        this.startRequest();\n        this.recordResponse();\n        this.finishRequest();\n      }\n    }\n  }, {\n    key: \"startRequest\",\n    value: function startRequest() {\n      this.recordTimingMetric(TimingMetric.requestStart);\n      this.adapter.visitRequestStarted(this);\n    }\n  }, {\n    key: \"recordResponse\",\n    value: function recordResponse() {\n      var response = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.response;\n      this.response = response;\n      if (response) {\n        var statusCode = response.statusCode;\n        if (isSuccessful(statusCode)) {\n          this.adapter.visitRequestCompleted(this);\n        } else {\n          this.adapter.visitRequestFailedWithStatusCode(this, statusCode);\n        }\n      }\n    }\n  }, {\n    key: \"finishRequest\",\n    value: function finishRequest() {\n      this.recordTimingMetric(TimingMetric.requestEnd);\n      this.adapter.visitRequestFinished(this);\n    }\n  }, {\n    key: \"loadResponse\",\n    value: function loadResponse() {\n      var _this20 = this;\n      if (this.response) {\n        var _this$response = this.response,\n          statusCode = _this$response.statusCode,\n          responseHTML = _this$response.responseHTML;\n        this.render( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n          return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n            while (1) switch (_context11.prev = _context11.next) {\n              case 0:\n                if (_this20.shouldCacheSnapshot) _this20.cacheSnapshot();\n                if (!_this20.view.renderPromise) {\n                  _context11.next = 4;\n                  break;\n                }\n                _context11.next = 4;\n                return _this20.view.renderPromise;\n              case 4:\n                if (!(isSuccessful(statusCode) && responseHTML != null)) {\n                  _context11.next = 12;\n                  break;\n                }\n                _context11.next = 7;\n                return _this20.view.renderPage(PageSnapshot.fromHTMLString(responseHTML), false, _this20.willRender, _this20);\n              case 7:\n                _this20.performScroll();\n                _this20.adapter.visitRendered(_this20);\n                _this20.complete();\n                _context11.next = 16;\n                break;\n              case 12:\n                _context11.next = 14;\n                return _this20.view.renderError(PageSnapshot.fromHTMLString(responseHTML), _this20);\n              case 14:\n                _this20.adapter.visitRendered(_this20);\n                _this20.fail();\n              case 16:\n              case \"end\":\n                return _context11.stop();\n            }\n          }, _callee11);\n        })));\n      }\n    }\n  }, {\n    key: \"getCachedSnapshot\",\n    value: function getCachedSnapshot() {\n      var snapshot = this.view.getCachedSnapshotForLocation(this.location) || this.getPreloadedSnapshot();\n      if (snapshot && (!getAnchor(this.location) || snapshot.hasAnchor(getAnchor(this.location)))) {\n        if (this.action == \"restore\" || snapshot.isPreviewable) {\n          return snapshot;\n        }\n      }\n    }\n  }, {\n    key: \"getPreloadedSnapshot\",\n    value: function getPreloadedSnapshot() {\n      if (this.snapshotHTML) {\n        return PageSnapshot.fromHTMLString(this.snapshotHTML);\n      }\n    }\n  }, {\n    key: \"hasCachedSnapshot\",\n    value: function hasCachedSnapshot() {\n      return this.getCachedSnapshot() != null;\n    }\n  }, {\n    key: \"loadCachedSnapshot\",\n    value: function loadCachedSnapshot() {\n      var _this21 = this;\n      var snapshot = this.getCachedSnapshot();\n      if (snapshot) {\n        var isPreview = this.shouldIssueRequest();\n        this.render( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n          return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n            while (1) switch (_context12.prev = _context12.next) {\n              case 0:\n                _this21.cacheSnapshot();\n                if (!_this21.isSamePage) {\n                  _context12.next = 5;\n                  break;\n                }\n                _this21.adapter.visitRendered(_this21);\n                _context12.next = 13;\n                break;\n              case 5:\n                if (!_this21.view.renderPromise) {\n                  _context12.next = 8;\n                  break;\n                }\n                _context12.next = 8;\n                return _this21.view.renderPromise;\n              case 8:\n                _context12.next = 10;\n                return _this21.view.renderPage(snapshot, isPreview, _this21.willRender, _this21);\n              case 10:\n                _this21.performScroll();\n                _this21.adapter.visitRendered(_this21);\n                if (!isPreview) {\n                  _this21.complete();\n                }\n              case 13:\n              case \"end\":\n                return _context12.stop();\n            }\n          }, _callee12);\n        })));\n      }\n    }\n  }, {\n    key: \"followRedirect\",\n    value: function followRedirect() {\n      var _a;\n      if (this.redirectedToLocation && !this.followedRedirect && ((_a = this.response) === null || _a === void 0 ? void 0 : _a.redirected)) {\n        this.adapter.visitProposedToLocation(this.redirectedToLocation, {\n          action: \"replace\",\n          response: this.response,\n          shouldCacheSnapshot: false,\n          willRender: false\n        });\n        this.followedRedirect = true;\n      }\n    }\n  }, {\n    key: \"goToSamePageAnchor\",\n    value: function goToSamePageAnchor() {\n      var _this22 = this;\n      if (this.isSamePage) {\n        this.render( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n          return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n            while (1) switch (_context13.prev = _context13.next) {\n              case 0:\n                _this22.cacheSnapshot();\n                _this22.performScroll();\n                _this22.changeHistory();\n                _this22.adapter.visitRendered(_this22);\n              case 4:\n              case \"end\":\n                return _context13.stop();\n            }\n          }, _callee13);\n        })));\n      }\n    }\n  }, {\n    key: \"prepareRequest\",\n    value: function prepareRequest(request) {\n      if (this.acceptsStreamResponse) {\n        request.acceptResponseType(StreamMessage.contentType);\n      }\n    }\n  }, {\n    key: \"requestStarted\",\n    value: function requestStarted() {\n      this.startRequest();\n    }\n  }, {\n    key: \"requestPreventedHandlingResponse\",\n    value: function requestPreventedHandlingResponse(_request, _response) {}\n  }, {\n    key: \"requestSucceededWithResponse\",\n    value: function () {\n      var _requestSucceededWithResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(request, response) {\n        var responseHTML, redirected, statusCode;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.next = 2;\n              return response.responseHTML;\n            case 2:\n              responseHTML = _context14.sent;\n              redirected = response.redirected, statusCode = response.statusCode;\n              if (responseHTML == undefined) {\n                this.recordResponse({\n                  statusCode: SystemStatusCode.contentTypeMismatch,\n                  redirected: redirected\n                });\n              } else {\n                this.redirectedToLocation = response.redirected ? response.location : undefined;\n                this.recordResponse({\n                  statusCode: statusCode,\n                  responseHTML: responseHTML,\n                  redirected: redirected\n                });\n              }\n            case 5:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, this);\n      }));\n      function requestSucceededWithResponse(_x10, _x11) {\n        return _requestSucceededWithResponse.apply(this, arguments);\n      }\n      return requestSucceededWithResponse;\n    }()\n  }, {\n    key: \"requestFailedWithResponse\",\n    value: function () {\n      var _requestFailedWithResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(request, response) {\n        var responseHTML, redirected, statusCode;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.next = 2;\n              return response.responseHTML;\n            case 2:\n              responseHTML = _context15.sent;\n              redirected = response.redirected, statusCode = response.statusCode;\n              if (responseHTML == undefined) {\n                this.recordResponse({\n                  statusCode: SystemStatusCode.contentTypeMismatch,\n                  redirected: redirected\n                });\n              } else {\n                this.recordResponse({\n                  statusCode: statusCode,\n                  responseHTML: responseHTML,\n                  redirected: redirected\n                });\n              }\n            case 5:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this);\n      }));\n      function requestFailedWithResponse(_x12, _x13) {\n        return _requestFailedWithResponse.apply(this, arguments);\n      }\n      return requestFailedWithResponse;\n    }()\n  }, {\n    key: \"requestErrored\",\n    value: function requestErrored(_request, _error) {\n      this.recordResponse({\n        statusCode: SystemStatusCode.networkFailure,\n        redirected: false\n      });\n    }\n  }, {\n    key: \"requestFinished\",\n    value: function requestFinished() {\n      this.finishRequest();\n    }\n  }, {\n    key: \"performScroll\",\n    value: function performScroll() {\n      if (!this.scrolled && !this.view.forceReloaded) {\n        if (this.action == \"restore\") {\n          this.scrollToRestoredPosition() || this.scrollToAnchor() || this.view.scrollToTop();\n        } else {\n          this.scrollToAnchor() || this.view.scrollToTop();\n        }\n        if (this.isSamePage) {\n          this.delegate.visitScrolledToSamePageLocation(this.view.lastRenderedLocation, this.location);\n        }\n        this.scrolled = true;\n      }\n    }\n  }, {\n    key: \"scrollToRestoredPosition\",\n    value: function scrollToRestoredPosition() {\n      var scrollPosition = this.restorationData.scrollPosition;\n      if (scrollPosition) {\n        this.view.scrollToPosition(scrollPosition);\n        return true;\n      }\n    }\n  }, {\n    key: \"scrollToAnchor\",\n    value: function scrollToAnchor() {\n      var anchor = getAnchor(this.location);\n      if (anchor != null) {\n        this.view.scrollToAnchor(anchor);\n        return true;\n      }\n    }\n  }, {\n    key: \"recordTimingMetric\",\n    value: function recordTimingMetric(metric) {\n      this.timingMetrics[metric] = new Date().getTime();\n    }\n  }, {\n    key: \"getTimingMetrics\",\n    value: function getTimingMetrics() {\n      return Object.assign({}, this.timingMetrics);\n    }\n  }, {\n    key: \"getHistoryMethodForAction\",\n    value: function getHistoryMethodForAction(action) {\n      switch (action) {\n        case \"replace\":\n          return history.replaceState;\n        case \"advance\":\n        case \"restore\":\n          return history.pushState;\n      }\n    }\n  }, {\n    key: \"hasPreloadedResponse\",\n    value: function hasPreloadedResponse() {\n      return _typeof(this.response) == \"object\";\n    }\n  }, {\n    key: \"shouldIssueRequest\",\n    value: function shouldIssueRequest() {\n      if (this.isSamePage) {\n        return false;\n      } else if (this.action == \"restore\") {\n        return !this.hasCachedSnapshot();\n      } else {\n        return this.willRender;\n      }\n    }\n  }, {\n    key: \"cacheSnapshot\",\n    value: function cacheSnapshot() {\n      var _this23 = this;\n      if (!this.snapshotCached) {\n        this.view.cacheSnapshot(this.snapshot).then(function (snapshot) {\n          return snapshot && _this23.visitCachedSnapshot(snapshot);\n        });\n        this.snapshotCached = true;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function () {\n      var _render3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(callback) {\n        var _this24 = this;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              this.cancelRender();\n              _context16.next = 3;\n              return new Promise(function (resolve) {\n                _this24.frame = requestAnimationFrame(function () {\n                  return resolve();\n                });\n              });\n            case 3:\n              _context16.next = 5;\n              return callback();\n            case 5:\n              delete this.frame;\n            case 6:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this);\n      }));\n      function render(_x14) {\n        return _render3.apply(this, arguments);\n      }\n      return render;\n    }()\n  }, {\n    key: \"cancelRender\",\n    value: function cancelRender() {\n      if (this.frame) {\n        cancelAnimationFrame(this.frame);\n        delete this.frame;\n      }\n    }\n  }]);\n  return Visit;\n}();\nfunction isSuccessful(statusCode) {\n  return statusCode >= 200 && statusCode < 300;\n}\nvar BrowserAdapter = /*#__PURE__*/function () {\n  function BrowserAdapter(session) {\n    var _this25 = this;\n    _classCallCheck(this, BrowserAdapter);\n    this.progressBar = new ProgressBar();\n    this.showProgressBar = function () {\n      _this25.progressBar.show();\n    };\n    this.session = session;\n  }\n  _createClass(BrowserAdapter, [{\n    key: \"visitProposedToLocation\",\n    value: function visitProposedToLocation(location, options) {\n      this.navigator.startVisit(location, (options === null || options === void 0 ? void 0 : options.restorationIdentifier) || uuid(), options);\n    }\n  }, {\n    key: \"visitStarted\",\n    value: function visitStarted(visit) {\n      this.location = visit.location;\n      visit.loadCachedSnapshot();\n      visit.issueRequest();\n      visit.goToSamePageAnchor();\n    }\n  }, {\n    key: \"visitRequestStarted\",\n    value: function visitRequestStarted(visit) {\n      this.progressBar.setValue(0);\n      if (visit.hasCachedSnapshot() || visit.action != \"restore\") {\n        this.showVisitProgressBarAfterDelay();\n      } else {\n        this.showProgressBar();\n      }\n    }\n  }, {\n    key: \"visitRequestCompleted\",\n    value: function visitRequestCompleted(visit) {\n      visit.loadResponse();\n    }\n  }, {\n    key: \"visitRequestFailedWithStatusCode\",\n    value: function visitRequestFailedWithStatusCode(visit, statusCode) {\n      switch (statusCode) {\n        case SystemStatusCode.networkFailure:\n        case SystemStatusCode.timeoutFailure:\n        case SystemStatusCode.contentTypeMismatch:\n          return this.reload({\n            reason: \"request_failed\",\n            context: {\n              statusCode: statusCode\n            }\n          });\n        default:\n          return visit.loadResponse();\n      }\n    }\n  }, {\n    key: \"visitRequestFinished\",\n    value: function visitRequestFinished(_visit) {\n      this.progressBar.setValue(1);\n      this.hideVisitProgressBar();\n    }\n  }, {\n    key: \"visitCompleted\",\n    value: function visitCompleted(_visit) {}\n  }, {\n    key: \"pageInvalidated\",\n    value: function pageInvalidated(reason) {\n      this.reload(reason);\n    }\n  }, {\n    key: \"visitFailed\",\n    value: function visitFailed(_visit) {}\n  }, {\n    key: \"visitRendered\",\n    value: function visitRendered(_visit) {}\n  }, {\n    key: \"formSubmissionStarted\",\n    value: function formSubmissionStarted(_formSubmission) {\n      this.progressBar.setValue(0);\n      this.showFormProgressBarAfterDelay();\n    }\n  }, {\n    key: \"formSubmissionFinished\",\n    value: function formSubmissionFinished(_formSubmission) {\n      this.progressBar.setValue(1);\n      this.hideFormProgressBar();\n    }\n  }, {\n    key: \"showVisitProgressBarAfterDelay\",\n    value: function showVisitProgressBarAfterDelay() {\n      this.visitProgressBarTimeout = window.setTimeout(this.showProgressBar, this.session.progressBarDelay);\n    }\n  }, {\n    key: \"hideVisitProgressBar\",\n    value: function hideVisitProgressBar() {\n      this.progressBar.hide();\n      if (this.visitProgressBarTimeout != null) {\n        window.clearTimeout(this.visitProgressBarTimeout);\n        delete this.visitProgressBarTimeout;\n      }\n    }\n  }, {\n    key: \"showFormProgressBarAfterDelay\",\n    value: function showFormProgressBarAfterDelay() {\n      if (this.formProgressBarTimeout == null) {\n        this.formProgressBarTimeout = window.setTimeout(this.showProgressBar, this.session.progressBarDelay);\n      }\n    }\n  }, {\n    key: \"hideFormProgressBar\",\n    value: function hideFormProgressBar() {\n      this.progressBar.hide();\n      if (this.formProgressBarTimeout != null) {\n        window.clearTimeout(this.formProgressBarTimeout);\n        delete this.formProgressBarTimeout;\n      }\n    }\n  }, {\n    key: \"reload\",\n    value: function reload(reason) {\n      var _a;\n      dispatch(\"turbo:reload\", {\n        detail: reason\n      });\n      window.location.href = ((_a = this.location) === null || _a === void 0 ? void 0 : _a.toString()) || window.location.href;\n    }\n  }, {\n    key: \"navigator\",\n    get: function get() {\n      return this.session.navigator;\n    }\n  }]);\n  return BrowserAdapter;\n}();\nvar CacheObserver = /*#__PURE__*/function () {\n  function CacheObserver() {\n    _classCallCheck(this, CacheObserver);\n    this.started = false;\n    this.removeStaleElements = function (_event) {\n      var staleElements = _toConsumableArray(document.querySelectorAll('[data-turbo-cache=\"false\"]'));\n      var _iterator16 = _createForOfIteratorHelper(staleElements),\n        _step16;\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          var element = _step16.value;\n          element.remove();\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n    };\n  }\n  _createClass(CacheObserver, [{\n    key: \"start\",\n    value: function start() {\n      if (!this.started) {\n        this.started = true;\n        addEventListener(\"turbo:before-cache\", this.removeStaleElements, false);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.started) {\n        this.started = false;\n        removeEventListener(\"turbo:before-cache\", this.removeStaleElements, false);\n      }\n    }\n  }]);\n  return CacheObserver;\n}();\nvar FrameRedirector = /*#__PURE__*/function () {\n  function FrameRedirector(session, element) {\n    _classCallCheck(this, FrameRedirector);\n    this.session = session;\n    this.element = element;\n    this.linkInterceptor = new LinkInterceptor(this, element);\n    this.formSubmitObserver = new FormSubmitObserver(this, element);\n  }\n  _createClass(FrameRedirector, [{\n    key: \"start\",\n    value: function start() {\n      this.linkInterceptor.start();\n      this.formSubmitObserver.start();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.linkInterceptor.stop();\n      this.formSubmitObserver.stop();\n    }\n  }, {\n    key: \"shouldInterceptLinkClick\",\n    value: function shouldInterceptLinkClick(element, _location, _event) {\n      return this.shouldRedirect(element);\n    }\n  }, {\n    key: \"linkClickIntercepted\",\n    value: function linkClickIntercepted(element, url, event) {\n      var frame = this.findFrameElement(element);\n      if (frame) {\n        frame.delegate.linkClickIntercepted(element, url, event);\n      }\n    }\n  }, {\n    key: \"willSubmitForm\",\n    value: function willSubmitForm(element, submitter) {\n      return element.closest(\"turbo-frame\") == null && this.shouldSubmit(element, submitter) && this.shouldRedirect(element, submitter);\n    }\n  }, {\n    key: \"formSubmitted\",\n    value: function formSubmitted(element, submitter) {\n      var frame = this.findFrameElement(element, submitter);\n      if (frame) {\n        frame.delegate.formSubmitted(element, submitter);\n      }\n    }\n  }, {\n    key: \"shouldSubmit\",\n    value: function shouldSubmit(form, submitter) {\n      var _a;\n      var action = getAction(form, submitter);\n      var meta = this.element.ownerDocument.querySelector(\"meta[name=\\\"turbo-root\\\"]\");\n      var rootLocation = expandURL((_a = meta === null || meta === void 0 ? void 0 : meta.content) !== null && _a !== void 0 ? _a : \"/\");\n      return this.shouldRedirect(form, submitter) && locationIsVisitable(action, rootLocation);\n    }\n  }, {\n    key: \"shouldRedirect\",\n    value: function shouldRedirect(element, submitter) {\n      var isNavigatable = element instanceof HTMLFormElement ? this.session.submissionIsNavigatable(element, submitter) : this.session.elementIsNavigatable(element);\n      if (isNavigatable) {\n        var frame = this.findFrameElement(element, submitter);\n        return frame ? frame != element.closest(\"turbo-frame\") : false;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"findFrameElement\",\n    value: function findFrameElement(element, submitter) {\n      var id = (submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute(\"data-turbo-frame\")) || element.getAttribute(\"data-turbo-frame\");\n      if (id && id != \"_top\") {\n        var frame = this.element.querySelector(\"#\".concat(id, \":not([disabled])\"));\n        if (frame instanceof FrameElement) {\n          return frame;\n        }\n      }\n    }\n  }]);\n  return FrameRedirector;\n}();\nvar History = /*#__PURE__*/function () {\n  function History(delegate) {\n    var _this26 = this;\n    _classCallCheck(this, History);\n    this.restorationIdentifier = uuid();\n    this.restorationData = {};\n    this.started = false;\n    this.pageLoaded = false;\n    this.onPopState = function (event) {\n      if (_this26.shouldHandlePopState()) {\n        var _ref18 = event.state || {},\n          turbo = _ref18.turbo;\n        if (turbo) {\n          _this26.location = new URL(window.location.href);\n          var restorationIdentifier = turbo.restorationIdentifier;\n          _this26.restorationIdentifier = restorationIdentifier;\n          _this26.delegate.historyPoppedToLocationWithRestorationIdentifier(_this26.location, restorationIdentifier);\n        }\n      }\n    };\n    this.onPageLoad = /*#__PURE__*/function () {\n      var _ref19 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(_event) {\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) switch (_context17.prev = _context17.next) {\n            case 0:\n              _context17.next = 2;\n              return nextMicrotask();\n            case 2:\n              _this26.pageLoaded = true;\n            case 3:\n            case \"end\":\n              return _context17.stop();\n          }\n        }, _callee17);\n      }));\n      return function (_x15) {\n        return _ref19.apply(this, arguments);\n      };\n    }();\n    this.delegate = delegate;\n  }\n  _createClass(History, [{\n    key: \"start\",\n    value: function start() {\n      if (!this.started) {\n        addEventListener(\"popstate\", this.onPopState, false);\n        addEventListener(\"load\", this.onPageLoad, false);\n        this.started = true;\n        this.replace(new URL(window.location.href));\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.started) {\n        removeEventListener(\"popstate\", this.onPopState, false);\n        removeEventListener(\"load\", this.onPageLoad, false);\n        this.started = false;\n      }\n    }\n  }, {\n    key: \"push\",\n    value: function push(location, restorationIdentifier) {\n      this.update(history.pushState, location, restorationIdentifier);\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(location, restorationIdentifier) {\n      this.update(history.replaceState, location, restorationIdentifier);\n    }\n  }, {\n    key: \"update\",\n    value: function update(method, location) {\n      var restorationIdentifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : uuid();\n      var state = {\n        turbo: {\n          restorationIdentifier: restorationIdentifier\n        }\n      };\n      method.call(history, state, \"\", location.href);\n      this.location = location;\n      this.restorationIdentifier = restorationIdentifier;\n    }\n  }, {\n    key: \"getRestorationDataForIdentifier\",\n    value: function getRestorationDataForIdentifier(restorationIdentifier) {\n      return this.restorationData[restorationIdentifier] || {};\n    }\n  }, {\n    key: \"updateRestorationData\",\n    value: function updateRestorationData(additionalData) {\n      var restorationIdentifier = this.restorationIdentifier;\n      var restorationData = this.restorationData[restorationIdentifier];\n      this.restorationData[restorationIdentifier] = Object.assign(Object.assign({}, restorationData), additionalData);\n    }\n  }, {\n    key: \"assumeControlOfScrollRestoration\",\n    value: function assumeControlOfScrollRestoration() {\n      var _a;\n      if (!this.previousScrollRestoration) {\n        this.previousScrollRestoration = (_a = history.scrollRestoration) !== null && _a !== void 0 ? _a : \"auto\";\n        history.scrollRestoration = \"manual\";\n      }\n    }\n  }, {\n    key: \"relinquishControlOfScrollRestoration\",\n    value: function relinquishControlOfScrollRestoration() {\n      if (this.previousScrollRestoration) {\n        history.scrollRestoration = this.previousScrollRestoration;\n        delete this.previousScrollRestoration;\n      }\n    }\n  }, {\n    key: \"shouldHandlePopState\",\n    value: function shouldHandlePopState() {\n      return this.pageIsLoaded();\n    }\n  }, {\n    key: \"pageIsLoaded\",\n    value: function pageIsLoaded() {\n      return this.pageLoaded || document.readyState == \"complete\";\n    }\n  }]);\n  return History;\n}();\nvar Navigator = /*#__PURE__*/function () {\n  function Navigator(delegate) {\n    _classCallCheck(this, Navigator);\n    this.delegate = delegate;\n  }\n  _createClass(Navigator, [{\n    key: \"proposeVisit\",\n    value: function proposeVisit(location) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (this.delegate.allowsVisitingLocationWithAction(location, options.action)) {\n        if (locationIsVisitable(location, this.view.snapshot.rootLocation)) {\n          this.delegate.visitProposedToLocation(location, options);\n        } else {\n          window.location.href = location.toString();\n        }\n      }\n    }\n  }, {\n    key: \"startVisit\",\n    value: function startVisit(locatable, restorationIdentifier) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      this.stop();\n      this.currentVisit = new Visit(this, expandURL(locatable), restorationIdentifier, Object.assign({\n        referrer: this.location\n      }, options));\n      this.currentVisit.start();\n    }\n  }, {\n    key: \"submitForm\",\n    value: function submitForm(form, submitter) {\n      this.stop();\n      this.formSubmission = new FormSubmission(this, form, submitter, true);\n      this.formSubmission.start();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.formSubmission) {\n        this.formSubmission.stop();\n        delete this.formSubmission;\n      }\n      if (this.currentVisit) {\n        this.currentVisit.cancel();\n        delete this.currentVisit;\n      }\n    }\n  }, {\n    key: \"adapter\",\n    get: function get() {\n      return this.delegate.adapter;\n    }\n  }, {\n    key: \"view\",\n    get: function get() {\n      return this.delegate.view;\n    }\n  }, {\n    key: \"history\",\n    get: function get() {\n      return this.delegate.history;\n    }\n  }, {\n    key: \"formSubmissionStarted\",\n    value: function formSubmissionStarted(formSubmission) {\n      if (typeof this.adapter.formSubmissionStarted === \"function\") {\n        this.adapter.formSubmissionStarted(formSubmission);\n      }\n    }\n  }, {\n    key: \"formSubmissionSucceededWithResponse\",\n    value: function () {\n      var _formSubmissionSucceededWithResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(formSubmission, fetchResponse) {\n        var responseHTML, shouldCacheSnapshot, statusCode, redirected, action, visitOptions;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              if (!(formSubmission == this.formSubmission)) {\n                _context18.next = 5;\n                break;\n              }\n              _context18.next = 3;\n              return fetchResponse.responseHTML;\n            case 3:\n              responseHTML = _context18.sent;\n              if (responseHTML) {\n                shouldCacheSnapshot = formSubmission.method == FetchMethod.get;\n                if (!shouldCacheSnapshot) {\n                  this.view.clearSnapshotCache();\n                }\n                statusCode = fetchResponse.statusCode, redirected = fetchResponse.redirected;\n                action = this.getActionForFormSubmission(formSubmission);\n                visitOptions = {\n                  action: action,\n                  shouldCacheSnapshot: shouldCacheSnapshot,\n                  response: {\n                    statusCode: statusCode,\n                    responseHTML: responseHTML,\n                    redirected: redirected\n                  }\n                };\n                this.proposeVisit(fetchResponse.location, visitOptions);\n              }\n            case 5:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18, this);\n      }));\n      function formSubmissionSucceededWithResponse(_x16, _x17) {\n        return _formSubmissionSucceededWithResponse.apply(this, arguments);\n      }\n      return formSubmissionSucceededWithResponse;\n    }()\n  }, {\n    key: \"formSubmissionFailedWithResponse\",\n    value: function () {\n      var _formSubmissionFailedWithResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(formSubmission, fetchResponse) {\n        var responseHTML, snapshot;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.next = 2;\n              return fetchResponse.responseHTML;\n            case 2:\n              responseHTML = _context19.sent;\n              if (!responseHTML) {\n                _context19.next = 14;\n                break;\n              }\n              snapshot = PageSnapshot.fromHTMLString(responseHTML);\n              if (!fetchResponse.serverError) {\n                _context19.next = 10;\n                break;\n              }\n              _context19.next = 8;\n              return this.view.renderError(snapshot, this.currentVisit);\n            case 8:\n              _context19.next = 12;\n              break;\n            case 10:\n              _context19.next = 12;\n              return this.view.renderPage(snapshot, false, true, this.currentVisit);\n            case 12:\n              this.view.scrollToTop();\n              this.view.clearSnapshotCache();\n            case 14:\n            case \"end\":\n              return _context19.stop();\n          }\n        }, _callee19, this);\n      }));\n      function formSubmissionFailedWithResponse(_x18, _x19) {\n        return _formSubmissionFailedWithResponse.apply(this, arguments);\n      }\n      return formSubmissionFailedWithResponse;\n    }()\n  }, {\n    key: \"formSubmissionErrored\",\n    value: function formSubmissionErrored(formSubmission, error) {\n      console.error(error);\n    }\n  }, {\n    key: \"formSubmissionFinished\",\n    value: function formSubmissionFinished(formSubmission) {\n      if (typeof this.adapter.formSubmissionFinished === \"function\") {\n        this.adapter.formSubmissionFinished(formSubmission);\n      }\n    }\n  }, {\n    key: \"visitStarted\",\n    value: function visitStarted(visit) {\n      this.delegate.visitStarted(visit);\n    }\n  }, {\n    key: \"visitCompleted\",\n    value: function visitCompleted(visit) {\n      this.delegate.visitCompleted(visit);\n    }\n  }, {\n    key: \"locationWithActionIsSamePage\",\n    value: function locationWithActionIsSamePage(location, action) {\n      var anchor = getAnchor(location);\n      var currentAnchor = getAnchor(this.view.lastRenderedLocation);\n      var isRestorationToTop = action === \"restore\" && typeof anchor === \"undefined\";\n      return action !== \"replace\" && getRequestURL(location) === getRequestURL(this.view.lastRenderedLocation) && (isRestorationToTop || anchor != null && anchor !== currentAnchor);\n    }\n  }, {\n    key: \"visitScrolledToSamePageLocation\",\n    value: function visitScrolledToSamePageLocation(oldURL, newURL) {\n      this.delegate.visitScrolledToSamePageLocation(oldURL, newURL);\n    }\n  }, {\n    key: \"location\",\n    get: function get() {\n      return this.history.location;\n    }\n  }, {\n    key: \"restorationIdentifier\",\n    get: function get() {\n      return this.history.restorationIdentifier;\n    }\n  }, {\n    key: \"getActionForFormSubmission\",\n    value: function getActionForFormSubmission(_ref20) {\n      var submitter = _ref20.submitter,\n        formElement = _ref20.formElement;\n      return getVisitAction(submitter, formElement) || \"advance\";\n    }\n  }]);\n  return Navigator;\n}();\nvar PageStage;\n(function (PageStage) {\n  PageStage[PageStage[\"initial\"] = 0] = \"initial\";\n  PageStage[PageStage[\"loading\"] = 1] = \"loading\";\n  PageStage[PageStage[\"interactive\"] = 2] = \"interactive\";\n  PageStage[PageStage[\"complete\"] = 3] = \"complete\";\n})(PageStage || (PageStage = {}));\nvar PageObserver = /*#__PURE__*/function () {\n  function PageObserver(delegate) {\n    var _this27 = this;\n    _classCallCheck(this, PageObserver);\n    this.stage = PageStage.initial;\n    this.started = false;\n    this.interpretReadyState = function () {\n      var readyState = _this27.readyState;\n      if (readyState == \"interactive\") {\n        _this27.pageIsInteractive();\n      } else if (readyState == \"complete\") {\n        _this27.pageIsComplete();\n      }\n    };\n    this.pageWillUnload = function () {\n      _this27.delegate.pageWillUnload();\n    };\n    this.delegate = delegate;\n  }\n  _createClass(PageObserver, [{\n    key: \"start\",\n    value: function start() {\n      if (!this.started) {\n        if (this.stage == PageStage.initial) {\n          this.stage = PageStage.loading;\n        }\n        document.addEventListener(\"readystatechange\", this.interpretReadyState, false);\n        addEventListener(\"pagehide\", this.pageWillUnload, false);\n        this.started = true;\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.started) {\n        document.removeEventListener(\"readystatechange\", this.interpretReadyState, false);\n        removeEventListener(\"pagehide\", this.pageWillUnload, false);\n        this.started = false;\n      }\n    }\n  }, {\n    key: \"pageIsInteractive\",\n    value: function pageIsInteractive() {\n      if (this.stage == PageStage.loading) {\n        this.stage = PageStage.interactive;\n        this.delegate.pageBecameInteractive();\n      }\n    }\n  }, {\n    key: \"pageIsComplete\",\n    value: function pageIsComplete() {\n      this.pageIsInteractive();\n      if (this.stage == PageStage.interactive) {\n        this.stage = PageStage.complete;\n        this.delegate.pageLoaded();\n      }\n    }\n  }, {\n    key: \"readyState\",\n    get: function get() {\n      return document.readyState;\n    }\n  }]);\n  return PageObserver;\n}();\nvar ScrollObserver = /*#__PURE__*/function () {\n  function ScrollObserver(delegate) {\n    var _this28 = this;\n    _classCallCheck(this, ScrollObserver);\n    this.started = false;\n    this.onScroll = function () {\n      _this28.updatePosition({\n        x: window.pageXOffset,\n        y: window.pageYOffset\n      });\n    };\n    this.delegate = delegate;\n  }\n  _createClass(ScrollObserver, [{\n    key: \"start\",\n    value: function start() {\n      if (!this.started) {\n        addEventListener(\"scroll\", this.onScroll, false);\n        this.onScroll();\n        this.started = true;\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.started) {\n        removeEventListener(\"scroll\", this.onScroll, false);\n        this.started = false;\n      }\n    }\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition(position) {\n      this.delegate.scrollPositionChanged(position);\n    }\n  }]);\n  return ScrollObserver;\n}();\nvar StreamMessageRenderer = /*#__PURE__*/function () {\n  function StreamMessageRenderer() {\n    _classCallCheck(this, StreamMessageRenderer);\n  }\n  _createClass(StreamMessageRenderer, [{\n    key: \"render\",\n    value: function render(_ref21) {\n      var fragment = _ref21.fragment;\n      Bardo.preservingPermanentElements(this, getPermanentElementMapForFragment(fragment), function () {\n        return document.documentElement.appendChild(fragment);\n      });\n    }\n  }, {\n    key: \"enteringBardo\",\n    value: function enteringBardo(currentPermanentElement, newPermanentElement) {\n      newPermanentElement.replaceWith(currentPermanentElement.cloneNode(true));\n    }\n  }, {\n    key: \"leavingBardo\",\n    value: function leavingBardo() {}\n  }]);\n  return StreamMessageRenderer;\n}();\nfunction getPermanentElementMapForFragment(fragment) {\n  var permanentElementsInDocument = queryPermanentElementsAll(document.documentElement);\n  var permanentElementMap = {};\n  var _iterator17 = _createForOfIteratorHelper(permanentElementsInDocument),\n    _step17;\n  try {\n    for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n      var permanentElementInDocument = _step17.value;\n      var id = permanentElementInDocument.id;\n      var _iterator18 = _createForOfIteratorHelper(fragment.querySelectorAll(\"turbo-stream\")),\n        _step18;\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var streamElement = _step18.value;\n          var elementInStream = _getPermanentElementById(streamElement.templateElement.content, id);\n          if (elementInStream) {\n            permanentElementMap[id] = [permanentElementInDocument, elementInStream];\n          }\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n    }\n  } catch (err) {\n    _iterator17.e(err);\n  } finally {\n    _iterator17.f();\n  }\n  return permanentElementMap;\n}\nvar StreamObserver = /*#__PURE__*/function () {\n  function StreamObserver(delegate) {\n    var _this29 = this;\n    _classCallCheck(this, StreamObserver);\n    this.sources = new Set();\n    this.started = false;\n    this.inspectFetchResponse = function (event) {\n      var response = fetchResponseFromEvent(event);\n      if (response && fetchResponseIsStream(response)) {\n        event.preventDefault();\n        _this29.receiveMessageResponse(response);\n      }\n    };\n    this.receiveMessageEvent = function (event) {\n      if (_this29.started && typeof event.data == \"string\") {\n        _this29.receiveMessageHTML(event.data);\n      }\n    };\n    this.delegate = delegate;\n  }\n  _createClass(StreamObserver, [{\n    key: \"start\",\n    value: function start() {\n      if (!this.started) {\n        this.started = true;\n        addEventListener(\"turbo:before-fetch-response\", this.inspectFetchResponse, false);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.started) {\n        this.started = false;\n        removeEventListener(\"turbo:before-fetch-response\", this.inspectFetchResponse, false);\n      }\n    }\n  }, {\n    key: \"connectStreamSource\",\n    value: function connectStreamSource(source) {\n      if (!this.streamSourceIsConnected(source)) {\n        this.sources.add(source);\n        source.addEventListener(\"message\", this.receiveMessageEvent, false);\n      }\n    }\n  }, {\n    key: \"disconnectStreamSource\",\n    value: function disconnectStreamSource(source) {\n      if (this.streamSourceIsConnected(source)) {\n        this.sources[\"delete\"](source);\n        source.removeEventListener(\"message\", this.receiveMessageEvent, false);\n      }\n    }\n  }, {\n    key: \"streamSourceIsConnected\",\n    value: function streamSourceIsConnected(source) {\n      return this.sources.has(source);\n    }\n  }, {\n    key: \"receiveMessageResponse\",\n    value: function () {\n      var _receiveMessageResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(response) {\n        var html;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.next = 2;\n              return response.responseHTML;\n            case 2:\n              html = _context20.sent;\n              if (html) {\n                this.receiveMessageHTML(html);\n              }\n            case 4:\n            case \"end\":\n              return _context20.stop();\n          }\n        }, _callee20, this);\n      }));\n      function receiveMessageResponse(_x20) {\n        return _receiveMessageResponse.apply(this, arguments);\n      }\n      return receiveMessageResponse;\n    }()\n  }, {\n    key: \"receiveMessageHTML\",\n    value: function receiveMessageHTML(html) {\n      this.delegate.receivedMessageFromStream(StreamMessage.wrap(html));\n    }\n  }]);\n  return StreamObserver;\n}();\nfunction fetchResponseFromEvent(event) {\n  var _a;\n  var fetchResponse = (_a = event.detail) === null || _a === void 0 ? void 0 : _a.fetchResponse;\n  if (fetchResponse instanceof FetchResponse) {\n    return fetchResponse;\n  }\n}\nfunction fetchResponseIsStream(response) {\n  var _a;\n  var contentType = (_a = response.contentType) !== null && _a !== void 0 ? _a : \"\";\n  return contentType.startsWith(StreamMessage.contentType);\n}\nvar ErrorRenderer = /*#__PURE__*/function (_Renderer2) {\n  _inherits(ErrorRenderer, _Renderer2);\n  var _super6 = _createSuper(ErrorRenderer);\n  function ErrorRenderer() {\n    _classCallCheck(this, ErrorRenderer);\n    return _super6.apply(this, arguments);\n  }\n  _createClass(ErrorRenderer, [{\n    key: \"render\",\n    value: function () {\n      var _render4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) switch (_context21.prev = _context21.next) {\n            case 0:\n              this.replaceHeadAndBody();\n              this.activateScriptElements();\n            case 2:\n            case \"end\":\n              return _context21.stop();\n          }\n        }, _callee21, this);\n      }));\n      function render() {\n        return _render4.apply(this, arguments);\n      }\n      return render;\n    }()\n  }, {\n    key: \"replaceHeadAndBody\",\n    value: function replaceHeadAndBody() {\n      var _document = document,\n        documentElement = _document.documentElement,\n        head = _document.head;\n      documentElement.replaceChild(this.newHead, head);\n      this.renderElement(this.currentElement, this.newElement);\n    }\n  }, {\n    key: \"activateScriptElements\",\n    value: function activateScriptElements() {\n      var _iterator19 = _createForOfIteratorHelper(this.scriptElements),\n        _step19;\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          var replaceableElement = _step19.value;\n          var parentNode = replaceableElement.parentNode;\n          if (parentNode) {\n            var element = activateScriptElement(replaceableElement);\n            parentNode.replaceChild(element, replaceableElement);\n          }\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n    }\n  }, {\n    key: \"newHead\",\n    get: function get() {\n      return this.newSnapshot.headSnapshot.element;\n    }\n  }, {\n    key: \"scriptElements\",\n    get: function get() {\n      return document.documentElement.querySelectorAll(\"script\");\n    }\n  }], [{\n    key: \"renderElement\",\n    value: function renderElement(currentElement, newElement) {\n      var _document2 = document,\n        documentElement = _document2.documentElement,\n        body = _document2.body;\n      documentElement.replaceChild(newElement, body);\n    }\n  }]);\n  return ErrorRenderer;\n}(Renderer);\nvar PageRenderer = /*#__PURE__*/function (_Renderer3) {\n  _inherits(PageRenderer, _Renderer3);\n  var _super7 = _createSuper(PageRenderer);\n  function PageRenderer() {\n    _classCallCheck(this, PageRenderer);\n    return _super7.apply(this, arguments);\n  }\n  _createClass(PageRenderer, [{\n    key: \"shouldRender\",\n    get: function get() {\n      return this.newSnapshot.isVisitable && this.trackedElementsAreIdentical;\n    }\n  }, {\n    key: \"reloadReason\",\n    get: function get() {\n      if (!this.newSnapshot.isVisitable) {\n        return {\n          reason: \"turbo_visit_control_is_reload\"\n        };\n      }\n      if (!this.trackedElementsAreIdentical) {\n        return {\n          reason: \"tracked_element_mismatch\"\n        };\n      }\n    }\n  }, {\n    key: \"prepareToRender\",\n    value: function () {\n      var _prepareToRender = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22() {\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) switch (_context22.prev = _context22.next) {\n            case 0:\n              _context22.next = 2;\n              return this.mergeHead();\n            case 2:\n            case \"end\":\n              return _context22.stop();\n          }\n        }, _callee22, this);\n      }));\n      function prepareToRender() {\n        return _prepareToRender.apply(this, arguments);\n      }\n      return prepareToRender;\n    }()\n  }, {\n    key: \"render\",\n    value: function () {\n      var _render5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23() {\n        return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n          while (1) switch (_context23.prev = _context23.next) {\n            case 0:\n              if (!this.willRender) {\n                _context23.next = 3;\n                break;\n              }\n              _context23.next = 3;\n              return this.replaceBody();\n            case 3:\n            case \"end\":\n              return _context23.stop();\n          }\n        }, _callee23, this);\n      }));\n      function render() {\n        return _render5.apply(this, arguments);\n      }\n      return render;\n    }()\n  }, {\n    key: \"finishRendering\",\n    value: function finishRendering() {\n      _get(_getPrototypeOf(PageRenderer.prototype), \"finishRendering\", this).call(this);\n      if (!this.isPreview) {\n        this.focusFirstAutofocusableElement();\n      }\n    }\n  }, {\n    key: \"currentHeadSnapshot\",\n    get: function get() {\n      return this.currentSnapshot.headSnapshot;\n    }\n  }, {\n    key: \"newHeadSnapshot\",\n    get: function get() {\n      return this.newSnapshot.headSnapshot;\n    }\n  }, {\n    key: \"newElement\",\n    get: function get() {\n      return this.newSnapshot.element;\n    }\n  }, {\n    key: \"mergeHead\",\n    value: function () {\n      var _mergeHead = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24() {\n        var mergedHeadElements, newStylesheetElements;\n        return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n          while (1) switch (_context24.prev = _context24.next) {\n            case 0:\n              mergedHeadElements = this.mergeProvisionalElements();\n              newStylesheetElements = this.copyNewHeadStylesheetElements();\n              this.copyNewHeadScriptElements();\n              _context24.next = 5;\n              return mergedHeadElements;\n            case 5:\n              _context24.next = 7;\n              return newStylesheetElements;\n            case 7:\n            case \"end\":\n              return _context24.stop();\n          }\n        }, _callee24, this);\n      }));\n      function mergeHead() {\n        return _mergeHead.apply(this, arguments);\n      }\n      return mergeHead;\n    }()\n  }, {\n    key: \"replaceBody\",\n    value: function () {\n      var _replaceBody = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26() {\n        var _this30 = this;\n        return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n          while (1) switch (_context26.prev = _context26.next) {\n            case 0:\n              _context26.next = 2;\n              return this.preservingPermanentElements( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25() {\n                return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n                  while (1) switch (_context25.prev = _context25.next) {\n                    case 0:\n                      _this30.activateNewBody();\n                      _context25.next = 3;\n                      return _this30.assignNewBody();\n                    case 3:\n                    case \"end\":\n                      return _context25.stop();\n                  }\n                }, _callee25);\n              })));\n            case 2:\n            case \"end\":\n              return _context26.stop();\n          }\n        }, _callee26, this);\n      }));\n      function replaceBody() {\n        return _replaceBody.apply(this, arguments);\n      }\n      return replaceBody;\n    }()\n  }, {\n    key: \"trackedElementsAreIdentical\",\n    get: function get() {\n      return this.currentHeadSnapshot.trackedElementSignature == this.newHeadSnapshot.trackedElementSignature;\n    }\n  }, {\n    key: \"copyNewHeadStylesheetElements\",\n    value: function () {\n      var _copyNewHeadStylesheetElements = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27() {\n        var loadingElements, _iterator20, _step20, element;\n        return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n          while (1) switch (_context27.prev = _context27.next) {\n            case 0:\n              loadingElements = [];\n              _iterator20 = _createForOfIteratorHelper(this.newHeadStylesheetElements);\n              try {\n                for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n                  element = _step20.value;\n                  loadingElements.push(waitForLoad(element));\n                  document.head.appendChild(element);\n                }\n              } catch (err) {\n                _iterator20.e(err);\n              } finally {\n                _iterator20.f();\n              }\n              _context27.next = 5;\n              return Promise.all(loadingElements);\n            case 5:\n            case \"end\":\n              return _context27.stop();\n          }\n        }, _callee27, this);\n      }));\n      function copyNewHeadStylesheetElements() {\n        return _copyNewHeadStylesheetElements.apply(this, arguments);\n      }\n      return copyNewHeadStylesheetElements;\n    }()\n  }, {\n    key: \"copyNewHeadScriptElements\",\n    value: function copyNewHeadScriptElements() {\n      var _iterator21 = _createForOfIteratorHelper(this.newHeadScriptElements),\n        _step21;\n      try {\n        for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n          var element = _step21.value;\n          document.head.appendChild(activateScriptElement(element));\n        }\n      } catch (err) {\n        _iterator21.e(err);\n      } finally {\n        _iterator21.f();\n      }\n    }\n  }, {\n    key: \"mergeProvisionalElements\",\n    value: function () {\n      var _mergeProvisionalElements = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28() {\n        var newHeadElements, _iterator22, _step22, element, _iterator23, _step23, _element2;\n        return _regeneratorRuntime().wrap(function _callee28$(_context28) {\n          while (1) switch (_context28.prev = _context28.next) {\n            case 0:\n              newHeadElements = _toConsumableArray(this.newHeadProvisionalElements);\n              _iterator22 = _createForOfIteratorHelper(this.currentHeadProvisionalElements);\n              try {\n                for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n                  element = _step22.value;\n                  if (!this.isCurrentElementInElementList(element, newHeadElements)) {\n                    document.head.removeChild(element);\n                  }\n                }\n              } catch (err) {\n                _iterator22.e(err);\n              } finally {\n                _iterator22.f();\n              }\n              _iterator23 = _createForOfIteratorHelper(newHeadElements);\n              try {\n                for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n                  _element2 = _step23.value;\n                  document.head.appendChild(_element2);\n                }\n              } catch (err) {\n                _iterator23.e(err);\n              } finally {\n                _iterator23.f();\n              }\n            case 5:\n            case \"end\":\n              return _context28.stop();\n          }\n        }, _callee28, this);\n      }));\n      function mergeProvisionalElements() {\n        return _mergeProvisionalElements.apply(this, arguments);\n      }\n      return mergeProvisionalElements;\n    }()\n  }, {\n    key: \"isCurrentElementInElementList\",\n    value: function isCurrentElementInElementList(element, elementList) {\n      var _iterator24 = _createForOfIteratorHelper(elementList.entries()),\n        _step24;\n      try {\n        for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n          var _ref23 = _step24.value;\n          var _ref24 = _slicedToArray(_ref23, 2);\n          var index = _ref24[0];\n          var newElement = _ref24[1];\n          if (element.tagName == \"TITLE\") {\n            if (newElement.tagName != \"TITLE\") {\n              continue;\n            }\n            if (element.innerHTML == newElement.innerHTML) {\n              elementList.splice(index, 1);\n              return true;\n            }\n          }\n          if (newElement.isEqualNode(element)) {\n            elementList.splice(index, 1);\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator24.e(err);\n      } finally {\n        _iterator24.f();\n      }\n      return false;\n    }\n  }, {\n    key: \"removeCurrentHeadProvisionalElements\",\n    value: function removeCurrentHeadProvisionalElements() {\n      var _iterator25 = _createForOfIteratorHelper(this.currentHeadProvisionalElements),\n        _step25;\n      try {\n        for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n          var element = _step25.value;\n          document.head.removeChild(element);\n        }\n      } catch (err) {\n        _iterator25.e(err);\n      } finally {\n        _iterator25.f();\n      }\n    }\n  }, {\n    key: \"copyNewHeadProvisionalElements\",\n    value: function copyNewHeadProvisionalElements() {\n      var _iterator26 = _createForOfIteratorHelper(this.newHeadProvisionalElements),\n        _step26;\n      try {\n        for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n          var element = _step26.value;\n          document.head.appendChild(element);\n        }\n      } catch (err) {\n        _iterator26.e(err);\n      } finally {\n        _iterator26.f();\n      }\n    }\n  }, {\n    key: \"activateNewBody\",\n    value: function activateNewBody() {\n      document.adoptNode(this.newElement);\n      this.activateNewBodyScriptElements();\n    }\n  }, {\n    key: \"activateNewBodyScriptElements\",\n    value: function activateNewBodyScriptElements() {\n      var _iterator27 = _createForOfIteratorHelper(this.newBodyScriptElements),\n        _step27;\n      try {\n        for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n          var inertScriptElement = _step27.value;\n          var activatedScriptElement = activateScriptElement(inertScriptElement);\n          inertScriptElement.replaceWith(activatedScriptElement);\n        }\n      } catch (err) {\n        _iterator27.e(err);\n      } finally {\n        _iterator27.f();\n      }\n    }\n  }, {\n    key: \"assignNewBody\",\n    value: function () {\n      var _assignNewBody = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee29() {\n        return _regeneratorRuntime().wrap(function _callee29$(_context29) {\n          while (1) switch (_context29.prev = _context29.next) {\n            case 0:\n              _context29.next = 2;\n              return this.renderElement(this.currentElement, this.newElement);\n            case 2:\n            case \"end\":\n              return _context29.stop();\n          }\n        }, _callee29, this);\n      }));\n      function assignNewBody() {\n        return _assignNewBody.apply(this, arguments);\n      }\n      return assignNewBody;\n    }()\n  }, {\n    key: \"newHeadStylesheetElements\",\n    get: function get() {\n      return this.newHeadSnapshot.getStylesheetElementsNotInSnapshot(this.currentHeadSnapshot);\n    }\n  }, {\n    key: \"newHeadScriptElements\",\n    get: function get() {\n      return this.newHeadSnapshot.getScriptElementsNotInSnapshot(this.currentHeadSnapshot);\n    }\n  }, {\n    key: \"currentHeadProvisionalElements\",\n    get: function get() {\n      return this.currentHeadSnapshot.provisionalElements;\n    }\n  }, {\n    key: \"newHeadProvisionalElements\",\n    get: function get() {\n      return this.newHeadSnapshot.provisionalElements;\n    }\n  }, {\n    key: \"newBodyScriptElements\",\n    get: function get() {\n      return this.newElement.querySelectorAll(\"script\");\n    }\n  }], [{\n    key: \"renderElement\",\n    value: function renderElement(currentElement, newElement) {\n      if (document.body && newElement instanceof HTMLBodyElement) {\n        document.body.replaceWith(newElement);\n      } else {\n        document.documentElement.appendChild(newElement);\n      }\n    }\n  }]);\n  return PageRenderer;\n}(Renderer);\nvar SnapshotCache = /*#__PURE__*/function () {\n  function SnapshotCache(size) {\n    _classCallCheck(this, SnapshotCache);\n    this.keys = [];\n    this.snapshots = {};\n    this.size = size;\n  }\n  _createClass(SnapshotCache, [{\n    key: \"has\",\n    value: function has(location) {\n      return toCacheKey(location) in this.snapshots;\n    }\n  }, {\n    key: \"get\",\n    value: function get(location) {\n      if (this.has(location)) {\n        var snapshot = this.read(location);\n        this.touch(location);\n        return snapshot;\n      }\n    }\n  }, {\n    key: \"put\",\n    value: function put(location, snapshot) {\n      this.write(location, snapshot);\n      this.touch(location);\n      return snapshot;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.snapshots = {};\n    }\n  }, {\n    key: \"read\",\n    value: function read(location) {\n      return this.snapshots[toCacheKey(location)];\n    }\n  }, {\n    key: \"write\",\n    value: function write(location, snapshot) {\n      this.snapshots[toCacheKey(location)] = snapshot;\n    }\n  }, {\n    key: \"touch\",\n    value: function touch(location) {\n      var key = toCacheKey(location);\n      var index = this.keys.indexOf(key);\n      if (index > -1) this.keys.splice(index, 1);\n      this.keys.unshift(key);\n      this.trim();\n    }\n  }, {\n    key: \"trim\",\n    value: function trim() {\n      var _iterator28 = _createForOfIteratorHelper(this.keys.splice(this.size)),\n        _step28;\n      try {\n        for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n          var key = _step28.value;\n          delete this.snapshots[key];\n        }\n      } catch (err) {\n        _iterator28.e(err);\n      } finally {\n        _iterator28.f();\n      }\n    }\n  }]);\n  return SnapshotCache;\n}();\nvar PageView = /*#__PURE__*/function (_View2) {\n  _inherits(PageView, _View2);\n  var _super8 = _createSuper(PageView);\n  function PageView() {\n    var _this31;\n    _classCallCheck(this, PageView);\n    _this31 = _super8.apply(this, arguments);\n    _this31.snapshotCache = new SnapshotCache(10);\n    _this31.lastRenderedLocation = new URL(location.href);\n    _this31.forceReloaded = false;\n    return _this31;\n  }\n  _createClass(PageView, [{\n    key: \"renderPage\",\n    value: function renderPage(snapshot) {\n      var isPreview = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var willRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var visit = arguments.length > 3 ? arguments[3] : undefined;\n      var renderer = new PageRenderer(this.snapshot, snapshot, PageRenderer.renderElement, isPreview, willRender);\n      if (!renderer.shouldRender) {\n        this.forceReloaded = true;\n      } else {\n        visit === null || visit === void 0 ? void 0 : visit.changeHistory();\n      }\n      return this.render(renderer);\n    }\n  }, {\n    key: \"renderError\",\n    value: function renderError(snapshot, visit) {\n      visit === null || visit === void 0 ? void 0 : visit.changeHistory();\n      var renderer = new ErrorRenderer(this.snapshot, snapshot, ErrorRenderer.renderElement, false);\n      return this.render(renderer);\n    }\n  }, {\n    key: \"clearSnapshotCache\",\n    value: function clearSnapshotCache() {\n      this.snapshotCache.clear();\n    }\n  }, {\n    key: \"cacheSnapshot\",\n    value: function () {\n      var _cacheSnapshot = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee30() {\n        var snapshot,\n          _location3,\n          cachedSnapshot,\n          _args30 = arguments;\n        return _regeneratorRuntime().wrap(function _callee30$(_context30) {\n          while (1) switch (_context30.prev = _context30.next) {\n            case 0:\n              snapshot = _args30.length > 0 && _args30[0] !== undefined ? _args30[0] : this.snapshot;\n              if (!snapshot.isCacheable) {\n                _context30.next = 9;\n                break;\n              }\n              this.delegate.viewWillCacheSnapshot();\n              _location3 = this.lastRenderedLocation;\n              _context30.next = 6;\n              return nextEventLoopTick();\n            case 6:\n              cachedSnapshot = snapshot.clone();\n              this.snapshotCache.put(_location3, cachedSnapshot);\n              return _context30.abrupt(\"return\", cachedSnapshot);\n            case 9:\n            case \"end\":\n              return _context30.stop();\n          }\n        }, _callee30, this);\n      }));\n      function cacheSnapshot() {\n        return _cacheSnapshot.apply(this, arguments);\n      }\n      return cacheSnapshot;\n    }()\n  }, {\n    key: \"getCachedSnapshotForLocation\",\n    value: function getCachedSnapshotForLocation(location) {\n      return this.snapshotCache.get(location);\n    }\n  }, {\n    key: \"snapshot\",\n    get: function get() {\n      return PageSnapshot.fromElement(this.element);\n    }\n  }]);\n  return PageView;\n}(View);\nvar Preloader = /*#__PURE__*/function () {\n  function Preloader(delegate) {\n    _classCallCheck(this, Preloader);\n    this.selector = \"a[data-turbo-preload]\";\n    this.delegate = delegate;\n  }\n  _createClass(Preloader, [{\n    key: \"snapshotCache\",\n    get: function get() {\n      return this.delegate.navigator.view.snapshotCache;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this32 = this;\n      if (document.readyState === \"loading\") {\n        return document.addEventListener(\"DOMContentLoaded\", function () {\n          _this32.preloadOnLoadLinksForView(document.body);\n        });\n      } else {\n        this.preloadOnLoadLinksForView(document.body);\n      }\n    }\n  }, {\n    key: \"preloadOnLoadLinksForView\",\n    value: function preloadOnLoadLinksForView(element) {\n      var _iterator29 = _createForOfIteratorHelper(element.querySelectorAll(this.selector)),\n        _step29;\n      try {\n        for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n          var link = _step29.value;\n          this.preloadURL(link);\n        }\n      } catch (err) {\n        _iterator29.e(err);\n      } finally {\n        _iterator29.f();\n      }\n    }\n  }, {\n    key: \"preloadURL\",\n    value: function () {\n      var _preloadURL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee31(link) {\n        var location, response, responseText, snapshot;\n        return _regeneratorRuntime().wrap(function _callee31$(_context31) {\n          while (1) switch (_context31.prev = _context31.next) {\n            case 0:\n              location = new URL(link.href);\n              if (!this.snapshotCache.has(location)) {\n                _context31.next = 3;\n                break;\n              }\n              return _context31.abrupt(\"return\");\n            case 3:\n              _context31.prev = 3;\n              _context31.next = 6;\n              return fetch(location.toString(), {\n                headers: {\n                  \"VND.PREFETCH\": \"true\",\n                  Accept: \"text/html\"\n                }\n              });\n            case 6:\n              response = _context31.sent;\n              _context31.next = 9;\n              return response.text();\n            case 9:\n              responseText = _context31.sent;\n              snapshot = PageSnapshot.fromHTMLString(responseText);\n              this.snapshotCache.put(location, snapshot);\n              _context31.next = 16;\n              break;\n            case 14:\n              _context31.prev = 14;\n              _context31.t0 = _context31[\"catch\"](3);\n            case 16:\n            case \"end\":\n              return _context31.stop();\n          }\n        }, _callee31, this, [[3, 14]]);\n      }));\n      function preloadURL(_x21) {\n        return _preloadURL.apply(this, arguments);\n      }\n      return preloadURL;\n    }()\n  }]);\n  return Preloader;\n}();\nvar Session = /*#__PURE__*/function () {\n  function Session() {\n    _classCallCheck(this, Session);\n    this.navigator = new Navigator(this);\n    this.history = new History(this);\n    this.preloader = new Preloader(this);\n    this.view = new PageView(this, document.documentElement);\n    this.adapter = new BrowserAdapter(this);\n    this.pageObserver = new PageObserver(this);\n    this.cacheObserver = new CacheObserver();\n    this.linkClickObserver = new LinkClickObserver(this, window);\n    this.formSubmitObserver = new FormSubmitObserver(this, document);\n    this.scrollObserver = new ScrollObserver(this);\n    this.streamObserver = new StreamObserver(this);\n    this.formLinkClickObserver = new FormLinkClickObserver(this, document.documentElement);\n    this.frameRedirector = new FrameRedirector(this, document.documentElement);\n    this.streamMessageRenderer = new StreamMessageRenderer();\n    this.drive = true;\n    this.enabled = true;\n    this.progressBarDelay = 500;\n    this.started = false;\n    this.formMode = \"on\";\n  }\n  _createClass(Session, [{\n    key: \"start\",\n    value: function start() {\n      if (!this.started) {\n        this.pageObserver.start();\n        this.cacheObserver.start();\n        this.formLinkClickObserver.start();\n        this.linkClickObserver.start();\n        this.formSubmitObserver.start();\n        this.scrollObserver.start();\n        this.streamObserver.start();\n        this.frameRedirector.start();\n        this.history.start();\n        this.preloader.start();\n        this.started = true;\n        this.enabled = true;\n      }\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.enabled = false;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.started) {\n        this.pageObserver.stop();\n        this.cacheObserver.stop();\n        this.formLinkClickObserver.stop();\n        this.linkClickObserver.stop();\n        this.formSubmitObserver.stop();\n        this.scrollObserver.stop();\n        this.streamObserver.stop();\n        this.frameRedirector.stop();\n        this.history.stop();\n        this.started = false;\n      }\n    }\n  }, {\n    key: \"registerAdapter\",\n    value: function registerAdapter(adapter) {\n      this.adapter = adapter;\n    }\n  }, {\n    key: \"visit\",\n    value: function visit(location) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var frameElement = options.frame ? document.getElementById(options.frame) : null;\n      if (frameElement instanceof FrameElement) {\n        frameElement.src = location.toString();\n        frameElement.loaded;\n      } else {\n        this.navigator.proposeVisit(expandURL(location), options);\n      }\n    }\n  }, {\n    key: \"connectStreamSource\",\n    value: function connectStreamSource(source) {\n      this.streamObserver.connectStreamSource(source);\n    }\n  }, {\n    key: \"disconnectStreamSource\",\n    value: function disconnectStreamSource(source) {\n      this.streamObserver.disconnectStreamSource(source);\n    }\n  }, {\n    key: \"renderStreamMessage\",\n    value: function renderStreamMessage(message) {\n      this.streamMessageRenderer.render(StreamMessage.wrap(message));\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this.view.clearSnapshotCache();\n    }\n  }, {\n    key: \"setProgressBarDelay\",\n    value: function setProgressBarDelay(delay) {\n      this.progressBarDelay = delay;\n    }\n  }, {\n    key: \"setFormMode\",\n    value: function setFormMode(mode) {\n      this.formMode = mode;\n    }\n  }, {\n    key: \"location\",\n    get: function get() {\n      return this.history.location;\n    }\n  }, {\n    key: \"restorationIdentifier\",\n    get: function get() {\n      return this.history.restorationIdentifier;\n    }\n  }, {\n    key: \"historyPoppedToLocationWithRestorationIdentifier\",\n    value: function historyPoppedToLocationWithRestorationIdentifier(location, restorationIdentifier) {\n      if (this.enabled) {\n        this.navigator.startVisit(location, restorationIdentifier, {\n          action: \"restore\",\n          historyChanged: true\n        });\n      } else {\n        this.adapter.pageInvalidated({\n          reason: \"turbo_disabled\"\n        });\n      }\n    }\n  }, {\n    key: \"scrollPositionChanged\",\n    value: function scrollPositionChanged(position) {\n      this.history.updateRestorationData({\n        scrollPosition: position\n      });\n    }\n  }, {\n    key: \"willSubmitFormLinkToLocation\",\n    value: function willSubmitFormLinkToLocation(link, location) {\n      return this.elementIsNavigatable(link) && locationIsVisitable(location, this.snapshot.rootLocation);\n    }\n  }, {\n    key: \"submittedFormLinkToLocation\",\n    value: function submittedFormLinkToLocation() {}\n  }, {\n    key: \"willFollowLinkToLocation\",\n    value: function willFollowLinkToLocation(link, location, event) {\n      return this.elementIsNavigatable(link) && locationIsVisitable(location, this.snapshot.rootLocation) && this.applicationAllowsFollowingLinkToLocation(link, location, event);\n    }\n  }, {\n    key: \"followedLinkToLocation\",\n    value: function followedLinkToLocation(link, location) {\n      var action = this.getActionForLink(link);\n      var acceptsStreamResponse = link.hasAttribute(\"data-turbo-stream\");\n      this.visit(location.href, {\n        action: action,\n        acceptsStreamResponse: acceptsStreamResponse\n      });\n    }\n  }, {\n    key: \"allowsVisitingLocationWithAction\",\n    value: function allowsVisitingLocationWithAction(location, action) {\n      return this.locationWithActionIsSamePage(location, action) || this.applicationAllowsVisitingLocation(location);\n    }\n  }, {\n    key: \"visitProposedToLocation\",\n    value: function visitProposedToLocation(location, options) {\n      extendURLWithDeprecatedProperties(location);\n      this.adapter.visitProposedToLocation(location, options);\n    }\n  }, {\n    key: \"visitStarted\",\n    value: function visitStarted(visit) {\n      if (!visit.acceptsStreamResponse) {\n        markAsBusy(document.documentElement);\n      }\n      extendURLWithDeprecatedProperties(visit.location);\n      if (!visit.silent) {\n        this.notifyApplicationAfterVisitingLocation(visit.location, visit.action);\n      }\n    }\n  }, {\n    key: \"visitCompleted\",\n    value: function visitCompleted(visit) {\n      clearBusyState(document.documentElement);\n      this.notifyApplicationAfterPageLoad(visit.getTimingMetrics());\n    }\n  }, {\n    key: \"locationWithActionIsSamePage\",\n    value: function locationWithActionIsSamePage(location, action) {\n      return this.navigator.locationWithActionIsSamePage(location, action);\n    }\n  }, {\n    key: \"visitScrolledToSamePageLocation\",\n    value: function visitScrolledToSamePageLocation(oldURL, newURL) {\n      this.notifyApplicationAfterVisitingSamePageLocation(oldURL, newURL);\n    }\n  }, {\n    key: \"willSubmitForm\",\n    value: function willSubmitForm(form, submitter) {\n      var action = getAction(form, submitter);\n      return this.submissionIsNavigatable(form, submitter) && locationIsVisitable(expandURL(action), this.snapshot.rootLocation);\n    }\n  }, {\n    key: \"formSubmitted\",\n    value: function formSubmitted(form, submitter) {\n      this.navigator.submitForm(form, submitter);\n    }\n  }, {\n    key: \"pageBecameInteractive\",\n    value: function pageBecameInteractive() {\n      this.view.lastRenderedLocation = this.location;\n      this.notifyApplicationAfterPageLoad();\n    }\n  }, {\n    key: \"pageLoaded\",\n    value: function pageLoaded() {\n      this.history.assumeControlOfScrollRestoration();\n    }\n  }, {\n    key: \"pageWillUnload\",\n    value: function pageWillUnload() {\n      this.history.relinquishControlOfScrollRestoration();\n    }\n  }, {\n    key: \"receivedMessageFromStream\",\n    value: function receivedMessageFromStream(message) {\n      this.renderStreamMessage(message);\n    }\n  }, {\n    key: \"viewWillCacheSnapshot\",\n    value: function viewWillCacheSnapshot() {\n      var _a;\n      if (!((_a = this.navigator.currentVisit) === null || _a === void 0 ? void 0 : _a.silent)) {\n        this.notifyApplicationBeforeCachingSnapshot();\n      }\n    }\n  }, {\n    key: \"allowsImmediateRender\",\n    value: function allowsImmediateRender(_ref25, options) {\n      var element = _ref25.element;\n      var event = this.notifyApplicationBeforeRender(element, options);\n      var defaultPrevented = event.defaultPrevented,\n        render = event.detail.render;\n      if (this.view.renderer && render) {\n        this.view.renderer.renderElement = render;\n      }\n      return !defaultPrevented;\n    }\n  }, {\n    key: \"viewRenderedSnapshot\",\n    value: function viewRenderedSnapshot(_snapshot, _isPreview) {\n      this.view.lastRenderedLocation = this.history.location;\n      this.notifyApplicationAfterRender();\n    }\n  }, {\n    key: \"preloadOnLoadLinksForView\",\n    value: function preloadOnLoadLinksForView(element) {\n      this.preloader.preloadOnLoadLinksForView(element);\n    }\n  }, {\n    key: \"viewInvalidated\",\n    value: function viewInvalidated(reason) {\n      this.adapter.pageInvalidated(reason);\n    }\n  }, {\n    key: \"frameLoaded\",\n    value: function frameLoaded(frame) {\n      this.notifyApplicationAfterFrameLoad(frame);\n    }\n  }, {\n    key: \"frameRendered\",\n    value: function frameRendered(fetchResponse, frame) {\n      this.notifyApplicationAfterFrameRender(fetchResponse, frame);\n    }\n  }, {\n    key: \"applicationAllowsFollowingLinkToLocation\",\n    value: function applicationAllowsFollowingLinkToLocation(link, location, ev) {\n      var event = this.notifyApplicationAfterClickingLinkToLocation(link, location, ev);\n      return !event.defaultPrevented;\n    }\n  }, {\n    key: \"applicationAllowsVisitingLocation\",\n    value: function applicationAllowsVisitingLocation(location) {\n      var event = this.notifyApplicationBeforeVisitingLocation(location);\n      return !event.defaultPrevented;\n    }\n  }, {\n    key: \"notifyApplicationAfterClickingLinkToLocation\",\n    value: function notifyApplicationAfterClickingLinkToLocation(link, location, event) {\n      return dispatch(\"turbo:click\", {\n        target: link,\n        detail: {\n          url: location.href,\n          originalEvent: event\n        },\n        cancelable: true\n      });\n    }\n  }, {\n    key: \"notifyApplicationBeforeVisitingLocation\",\n    value: function notifyApplicationBeforeVisitingLocation(location) {\n      return dispatch(\"turbo:before-visit\", {\n        detail: {\n          url: location.href\n        },\n        cancelable: true\n      });\n    }\n  }, {\n    key: \"notifyApplicationAfterVisitingLocation\",\n    value: function notifyApplicationAfterVisitingLocation(location, action) {\n      return dispatch(\"turbo:visit\", {\n        detail: {\n          url: location.href,\n          action: action\n        }\n      });\n    }\n  }, {\n    key: \"notifyApplicationBeforeCachingSnapshot\",\n    value: function notifyApplicationBeforeCachingSnapshot() {\n      return dispatch(\"turbo:before-cache\");\n    }\n  }, {\n    key: \"notifyApplicationBeforeRender\",\n    value: function notifyApplicationBeforeRender(newBody, options) {\n      return dispatch(\"turbo:before-render\", {\n        detail: Object.assign({\n          newBody: newBody\n        }, options),\n        cancelable: true\n      });\n    }\n  }, {\n    key: \"notifyApplicationAfterRender\",\n    value: function notifyApplicationAfterRender() {\n      return dispatch(\"turbo:render\");\n    }\n  }, {\n    key: \"notifyApplicationAfterPageLoad\",\n    value: function notifyApplicationAfterPageLoad() {\n      var timing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return dispatch(\"turbo:load\", {\n        detail: {\n          url: this.location.href,\n          timing: timing\n        }\n      });\n    }\n  }, {\n    key: \"notifyApplicationAfterVisitingSamePageLocation\",\n    value: function notifyApplicationAfterVisitingSamePageLocation(oldURL, newURL) {\n      dispatchEvent(new HashChangeEvent(\"hashchange\", {\n        oldURL: oldURL.toString(),\n        newURL: newURL.toString()\n      }));\n    }\n  }, {\n    key: \"notifyApplicationAfterFrameLoad\",\n    value: function notifyApplicationAfterFrameLoad(frame) {\n      return dispatch(\"turbo:frame-load\", {\n        target: frame\n      });\n    }\n  }, {\n    key: \"notifyApplicationAfterFrameRender\",\n    value: function notifyApplicationAfterFrameRender(fetchResponse, frame) {\n      return dispatch(\"turbo:frame-render\", {\n        detail: {\n          fetchResponse: fetchResponse\n        },\n        target: frame,\n        cancelable: true\n      });\n    }\n  }, {\n    key: \"submissionIsNavigatable\",\n    value: function submissionIsNavigatable(form, submitter) {\n      if (this.formMode == \"off\") {\n        return false;\n      } else {\n        var submitterIsNavigatable = submitter ? this.elementIsNavigatable(submitter) : true;\n        if (this.formMode == \"optin\") {\n          return submitterIsNavigatable && form.closest('[data-turbo=\"true\"]') != null;\n        } else {\n          return submitterIsNavigatable && this.elementIsNavigatable(form);\n        }\n      }\n    }\n  }, {\n    key: \"elementIsNavigatable\",\n    value: function elementIsNavigatable(element) {\n      var container = findClosestRecursively(element, \"[data-turbo]\");\n      var withinFrame = findClosestRecursively(element, \"turbo-frame\");\n      if (this.drive || withinFrame) {\n        if (container) {\n          return container.getAttribute(\"data-turbo\") != \"false\";\n        } else {\n          return true;\n        }\n      } else {\n        if (container) {\n          return container.getAttribute(\"data-turbo\") == \"true\";\n        } else {\n          return false;\n        }\n      }\n    }\n  }, {\n    key: \"getActionForLink\",\n    value: function getActionForLink(link) {\n      return getVisitAction(link) || \"advance\";\n    }\n  }, {\n    key: \"snapshot\",\n    get: function get() {\n      return this.view.snapshot;\n    }\n  }]);\n  return Session;\n}();\nfunction extendURLWithDeprecatedProperties(url) {\n  Object.defineProperties(url, deprecatedLocationPropertyDescriptors);\n}\nvar deprecatedLocationPropertyDescriptors = {\n  absoluteURL: {\n    get: function get() {\n      return this.toString();\n    }\n  }\n};\nvar Cache = /*#__PURE__*/function () {\n  function Cache(session) {\n    _classCallCheck(this, Cache);\n    this.session = session;\n  }\n  _createClass(Cache, [{\n    key: \"clear\",\n    value: function clear() {\n      this.session.clearCache();\n    }\n  }, {\n    key: \"resetCacheControl\",\n    value: function resetCacheControl() {\n      this.setCacheControl(\"\");\n    }\n  }, {\n    key: \"exemptPageFromCache\",\n    value: function exemptPageFromCache() {\n      this.setCacheControl(\"no-cache\");\n    }\n  }, {\n    key: \"exemptPageFromPreview\",\n    value: function exemptPageFromPreview() {\n      this.setCacheControl(\"no-preview\");\n    }\n  }, {\n    key: \"setCacheControl\",\n    value: function setCacheControl(value) {\n      setMetaContent(\"turbo-cache-control\", value);\n    }\n  }]);\n  return Cache;\n}();\nvar StreamActions = {\n  after: function after() {\n    var _this33 = this;\n    this.targetElements.forEach(function (e) {\n      var _a;\n      return (_a = e.parentElement) === null || _a === void 0 ? void 0 : _a.insertBefore(_this33.templateContent, e.nextSibling);\n    });\n  },\n  append: function append() {\n    var _this34 = this;\n    this.removeDuplicateTargetChildren();\n    this.targetElements.forEach(function (e) {\n      return e.append(_this34.templateContent);\n    });\n  },\n  before: function before() {\n    var _this35 = this;\n    this.targetElements.forEach(function (e) {\n      var _a;\n      return (_a = e.parentElement) === null || _a === void 0 ? void 0 : _a.insertBefore(_this35.templateContent, e);\n    });\n  },\n  prepend: function prepend() {\n    var _this36 = this;\n    this.removeDuplicateTargetChildren();\n    this.targetElements.forEach(function (e) {\n      return e.prepend(_this36.templateContent);\n    });\n  },\n  remove: function remove() {\n    this.targetElements.forEach(function (e) {\n      return e.remove();\n    });\n  },\n  replace: function replace() {\n    var _this37 = this;\n    this.targetElements.forEach(function (e) {\n      return e.replaceWith(_this37.templateContent);\n    });\n  },\n  update: function update() {\n    var _this38 = this;\n    this.targetElements.forEach(function (targetElement) {\n      targetElement.innerHTML = \"\";\n      targetElement.append(_this38.templateContent);\n    });\n  }\n};\nvar session = new Session();\nvar cache = new Cache(session);\nvar navigator$1 = session.navigator;\nfunction start() {\n  session.start();\n}\nfunction registerAdapter(adapter) {\n  session.registerAdapter(adapter);\n}\nfunction visit(location, options) {\n  session.visit(location, options);\n}\nfunction connectStreamSource(source) {\n  session.connectStreamSource(source);\n}\nfunction disconnectStreamSource(source) {\n  session.disconnectStreamSource(source);\n}\nfunction renderStreamMessage(message) {\n  session.renderStreamMessage(message);\n}\nfunction clearCache() {\n  console.warn(\"Please replace `Turbo.clearCache()` with `Turbo.cache.clear()`. The top-level function is deprecated and will be removed in a future version of Turbo.`\");\n  session.clearCache();\n}\nfunction setProgressBarDelay(delay) {\n  session.setProgressBarDelay(delay);\n}\nfunction setConfirmMethod(confirmMethod) {\n  FormSubmission.confirmMethod = confirmMethod;\n}\nfunction setFormMode(mode) {\n  session.setFormMode(mode);\n}\nvar Turbo = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  navigator: navigator$1,\n  session: session,\n  cache: cache,\n  PageRenderer: PageRenderer,\n  PageSnapshot: PageSnapshot,\n  FrameRenderer: FrameRenderer,\n  start: start,\n  registerAdapter: registerAdapter,\n  visit: visit,\n  connectStreamSource: connectStreamSource,\n  disconnectStreamSource: disconnectStreamSource,\n  renderStreamMessage: renderStreamMessage,\n  clearCache: clearCache,\n  setProgressBarDelay: setProgressBarDelay,\n  setConfirmMethod: setConfirmMethod,\n  setFormMode: setFormMode,\n  StreamActions: StreamActions\n});\nvar FrameController = /*#__PURE__*/function () {\n  function FrameController(element) {\n    var _this39 = this;\n    _classCallCheck(this, FrameController);\n    this.fetchResponseLoaded = function (_fetchResponse) {};\n    this.currentFetchRequest = null;\n    this.resolveVisitPromise = function () {};\n    this.connected = false;\n    this.hasBeenLoaded = false;\n    this.ignoredAttributes = new Set();\n    this.action = null;\n    this.visitCachedSnapshot = function (_ref15) {\n      var element = _ref15.element;\n      var frame = element.querySelector(\"#\" + _this39.element.id);\n      if (frame && _this39.previousFrameElement) {\n        frame.replaceChildren.apply(frame, _toConsumableArray(_this39.previousFrameElement.children));\n      }\n      delete _this39.previousFrameElement;\n    };\n    this.element = element;\n    this.view = new FrameView(this, this.element);\n    this.appearanceObserver = new AppearanceObserver(this, this.element);\n    this.formLinkClickObserver = new FormLinkClickObserver(this, this.element);\n    this.linkInterceptor = new LinkInterceptor(this, this.element);\n    this.restorationIdentifier = uuid();\n    this.formSubmitObserver = new FormSubmitObserver(this, this.element);\n  }\n  _createClass(FrameController, [{\n    key: \"connect\",\n    value: function connect() {\n      if (!this.connected) {\n        this.connected = true;\n        if (this.loadingStyle == FrameLoadingStyle.lazy) {\n          this.appearanceObserver.start();\n        } else {\n          this.loadSourceURL();\n        }\n        this.formLinkClickObserver.start();\n        this.linkInterceptor.start();\n        this.formSubmitObserver.start();\n      }\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      if (this.connected) {\n        this.connected = false;\n        this.appearanceObserver.stop();\n        this.formLinkClickObserver.stop();\n        this.linkInterceptor.stop();\n        this.formSubmitObserver.stop();\n      }\n    }\n  }, {\n    key: \"disabledChanged\",\n    value: function disabledChanged() {\n      if (this.loadingStyle == FrameLoadingStyle.eager) {\n        this.loadSourceURL();\n      }\n    }\n  }, {\n    key: \"sourceURLChanged\",\n    value: function sourceURLChanged() {\n      if (this.isIgnoringChangesTo(\"src\")) return;\n      if (this.element.isConnected) {\n        this.complete = false;\n      }\n      if (this.loadingStyle == FrameLoadingStyle.eager || this.hasBeenLoaded) {\n        this.loadSourceURL();\n      }\n    }\n  }, {\n    key: \"sourceURLReloaded\",\n    value: function sourceURLReloaded() {\n      var _this40 = this;\n      var src = this.element.src;\n      this.ignoringChangesToAttribute(\"complete\", function () {\n        _this40.element.removeAttribute(\"complete\");\n      });\n      this.element.src = null;\n      this.element.src = src;\n      return this.element.loaded;\n    }\n  }, {\n    key: \"completeChanged\",\n    value: function completeChanged() {\n      if (this.isIgnoringChangesTo(\"complete\")) return;\n      this.loadSourceURL();\n    }\n  }, {\n    key: \"loadingStyleChanged\",\n    value: function loadingStyleChanged() {\n      if (this.loadingStyle == FrameLoadingStyle.lazy) {\n        this.appearanceObserver.start();\n      } else {\n        this.appearanceObserver.stop();\n        this.loadSourceURL();\n      }\n    }\n  }, {\n    key: \"loadSourceURL\",\n    value: function () {\n      var _loadSourceURL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee32() {\n        return _regeneratorRuntime().wrap(function _callee32$(_context32) {\n          while (1) switch (_context32.prev = _context32.next) {\n            case 0:\n              if (!(this.enabled && this.isActive && !this.complete && this.sourceURL)) {\n                _context32.next = 6;\n                break;\n              }\n              this.element.loaded = this.visit(expandURL(this.sourceURL));\n              this.appearanceObserver.stop();\n              _context32.next = 5;\n              return this.element.loaded;\n            case 5:\n              this.hasBeenLoaded = true;\n            case 6:\n            case \"end\":\n              return _context32.stop();\n          }\n        }, _callee32, this);\n      }));\n      function loadSourceURL() {\n        return _loadSourceURL.apply(this, arguments);\n      }\n      return loadSourceURL;\n    }()\n  }, {\n    key: \"loadResponse\",\n    value: function () {\n      var _loadResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee33(fetchResponse) {\n        var html, _parseHTMLDocument, body, newFrameElement, snapshot, renderer;\n        return _regeneratorRuntime().wrap(function _callee33$(_context33) {\n          while (1) switch (_context33.prev = _context33.next) {\n            case 0:\n              if (fetchResponse.redirected || fetchResponse.succeeded && fetchResponse.isHTML) {\n                this.sourceURL = fetchResponse.response.url;\n              }\n              _context33.prev = 1;\n              _context33.next = 4;\n              return fetchResponse.responseHTML;\n            case 4:\n              html = _context33.sent;\n              if (!html) {\n                _context33.next = 26;\n                break;\n              }\n              _parseHTMLDocument = parseHTMLDocument(html), body = _parseHTMLDocument.body;\n              _context33.next = 9;\n              return this.extractForeignFrameElement(body);\n            case 9:\n              newFrameElement = _context33.sent;\n              if (!newFrameElement) {\n                _context33.next = 25;\n                break;\n              }\n              snapshot = new Snapshot(newFrameElement);\n              renderer = new FrameRenderer(this, this.view.snapshot, snapshot, FrameRenderer.renderElement, false, false);\n              if (!this.view.renderPromise) {\n                _context33.next = 16;\n                break;\n              }\n              _context33.next = 16;\n              return this.view.renderPromise;\n            case 16:\n              this.changeHistory();\n              _context33.next = 19;\n              return this.view.render(renderer);\n            case 19:\n              this.complete = true;\n              session.frameRendered(fetchResponse, this.element);\n              session.frameLoaded(this.element);\n              this.fetchResponseLoaded(fetchResponse);\n              _context33.next = 26;\n              break;\n            case 25:\n              if (this.willHandleFrameMissingFromResponse(fetchResponse)) {\n                console.warn(\"A matching frame for #\".concat(this.element.id, \" was missing from the response, transforming into full-page Visit.\"));\n                this.visitResponse(fetchResponse.response);\n              }\n            case 26:\n              _context33.next = 32;\n              break;\n            case 28:\n              _context33.prev = 28;\n              _context33.t0 = _context33[\"catch\"](1);\n              console.error(_context33.t0);\n              this.view.invalidate();\n            case 32:\n              _context33.prev = 32;\n              this.fetchResponseLoaded = function () {};\n              return _context33.finish(32);\n            case 35:\n            case \"end\":\n              return _context33.stop();\n          }\n        }, _callee33, this, [[1, 28, 32, 35]]);\n      }));\n      function loadResponse(_x22) {\n        return _loadResponse.apply(this, arguments);\n      }\n      return loadResponse;\n    }()\n  }, {\n    key: \"elementAppearedInViewport\",\n    value: function elementAppearedInViewport(element) {\n      this.proposeVisitIfNavigatedWithAction(element, element);\n      this.loadSourceURL();\n    }\n  }, {\n    key: \"willSubmitFormLinkToLocation\",\n    value: function willSubmitFormLinkToLocation(link) {\n      return this.shouldInterceptNavigation(link);\n    }\n  }, {\n    key: \"submittedFormLinkToLocation\",\n    value: function submittedFormLinkToLocation(link, _location, form) {\n      var frame = this.findFrameElement(link);\n      if (frame) form.setAttribute(\"data-turbo-frame\", frame.id);\n    }\n  }, {\n    key: \"shouldInterceptLinkClick\",\n    value: function shouldInterceptLinkClick(element, _location, _event) {\n      return this.shouldInterceptNavigation(element);\n    }\n  }, {\n    key: \"linkClickIntercepted\",\n    value: function linkClickIntercepted(element, location) {\n      this.navigateFrame(element, location);\n    }\n  }, {\n    key: \"willSubmitForm\",\n    value: function willSubmitForm(element, submitter) {\n      return element.closest(\"turbo-frame\") == this.element && this.shouldInterceptNavigation(element, submitter);\n    }\n  }, {\n    key: \"formSubmitted\",\n    value: function formSubmitted(element, submitter) {\n      if (this.formSubmission) {\n        this.formSubmission.stop();\n      }\n      this.formSubmission = new FormSubmission(this, element, submitter);\n      var fetchRequest = this.formSubmission.fetchRequest;\n      this.prepareRequest(fetchRequest);\n      this.formSubmission.start();\n    }\n  }, {\n    key: \"prepareRequest\",\n    value: function prepareRequest(request) {\n      var _a;\n      request.headers[\"Turbo-Frame\"] = this.id;\n      if ((_a = this.currentNavigationElement) === null || _a === void 0 ? void 0 : _a.hasAttribute(\"data-turbo-stream\")) {\n        request.acceptResponseType(StreamMessage.contentType);\n      }\n    }\n  }, {\n    key: \"requestStarted\",\n    value: function requestStarted(_request) {\n      markAsBusy(this.element);\n    }\n  }, {\n    key: \"requestPreventedHandlingResponse\",\n    value: function requestPreventedHandlingResponse(_request, _response) {\n      this.resolveVisitPromise();\n    }\n  }, {\n    key: \"requestSucceededWithResponse\",\n    value: function () {\n      var _requestSucceededWithResponse2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee34(request, response) {\n        return _regeneratorRuntime().wrap(function _callee34$(_context34) {\n          while (1) switch (_context34.prev = _context34.next) {\n            case 0:\n              _context34.next = 2;\n              return this.loadResponse(response);\n            case 2:\n              this.resolveVisitPromise();\n            case 3:\n            case \"end\":\n              return _context34.stop();\n          }\n        }, _callee34, this);\n      }));\n      function requestSucceededWithResponse(_x23, _x24) {\n        return _requestSucceededWithResponse2.apply(this, arguments);\n      }\n      return requestSucceededWithResponse;\n    }()\n  }, {\n    key: \"requestFailedWithResponse\",\n    value: function () {\n      var _requestFailedWithResponse2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee35(request, response) {\n        return _regeneratorRuntime().wrap(function _callee35$(_context35) {\n          while (1) switch (_context35.prev = _context35.next) {\n            case 0:\n              console.error(response);\n              _context35.next = 3;\n              return this.loadResponse(response);\n            case 3:\n              this.resolveVisitPromise();\n            case 4:\n            case \"end\":\n              return _context35.stop();\n          }\n        }, _callee35, this);\n      }));\n      function requestFailedWithResponse(_x25, _x26) {\n        return _requestFailedWithResponse2.apply(this, arguments);\n      }\n      return requestFailedWithResponse;\n    }()\n  }, {\n    key: \"requestErrored\",\n    value: function requestErrored(request, error) {\n      console.error(error);\n      this.resolveVisitPromise();\n    }\n  }, {\n    key: \"requestFinished\",\n    value: function requestFinished(_request) {\n      clearBusyState(this.element);\n    }\n  }, {\n    key: \"formSubmissionStarted\",\n    value: function formSubmissionStarted(_ref16) {\n      var formElement = _ref16.formElement;\n      markAsBusy(formElement, this.findFrameElement(formElement));\n    }\n  }, {\n    key: \"formSubmissionSucceededWithResponse\",\n    value: function formSubmissionSucceededWithResponse(formSubmission, response) {\n      var frame = this.findFrameElement(formSubmission.formElement, formSubmission.submitter);\n      frame.delegate.proposeVisitIfNavigatedWithAction(frame, formSubmission.formElement, formSubmission.submitter);\n      frame.delegate.loadResponse(response);\n    }\n  }, {\n    key: \"formSubmissionFailedWithResponse\",\n    value: function formSubmissionFailedWithResponse(formSubmission, fetchResponse) {\n      this.element.delegate.loadResponse(fetchResponse);\n    }\n  }, {\n    key: \"formSubmissionErrored\",\n    value: function formSubmissionErrored(formSubmission, error) {\n      console.error(error);\n    }\n  }, {\n    key: \"formSubmissionFinished\",\n    value: function formSubmissionFinished(_ref17) {\n      var formElement = _ref17.formElement;\n      clearBusyState(formElement, this.findFrameElement(formElement));\n    }\n  }, {\n    key: \"allowsImmediateRender\",\n    value: function allowsImmediateRender(_ref22, options) {\n      var newFrame = _ref22.element;\n      var event = dispatch(\"turbo:before-frame-render\", {\n        target: this.element,\n        detail: Object.assign({\n          newFrame: newFrame\n        }, options),\n        cancelable: true\n      });\n      var defaultPrevented = event.defaultPrevented,\n        render = event.detail.render;\n      if (this.view.renderer && render) {\n        this.view.renderer.renderElement = render;\n      }\n      return !defaultPrevented;\n    }\n  }, {\n    key: \"viewRenderedSnapshot\",\n    value: function viewRenderedSnapshot(_snapshot, _isPreview) {}\n  }, {\n    key: \"preloadOnLoadLinksForView\",\n    value: function preloadOnLoadLinksForView(element) {\n      session.preloadOnLoadLinksForView(element);\n    }\n  }, {\n    key: \"viewInvalidated\",\n    value: function viewInvalidated() {}\n  }, {\n    key: \"willRenderFrame\",\n    value: function willRenderFrame(currentElement, _newElement) {\n      this.previousFrameElement = currentElement.cloneNode(true);\n    }\n  }, {\n    key: \"visit\",\n    value: function () {\n      var _visit2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee36(url) {\n        var _this41 = this;\n        var _a, request;\n        return _regeneratorRuntime().wrap(function _callee36$(_context36) {\n          while (1) switch (_context36.prev = _context36.next) {\n            case 0:\n              request = new FetchRequest(this, FetchMethod.get, url, new URLSearchParams(), this.element);\n              (_a = this.currentFetchRequest) === null || _a === void 0 ? void 0 : _a.cancel();\n              this.currentFetchRequest = request;\n              return _context36.abrupt(\"return\", new Promise(function (resolve) {\n                _this41.resolveVisitPromise = function () {\n                  _this41.resolveVisitPromise = function () {};\n                  _this41.currentFetchRequest = null;\n                  resolve();\n                };\n                request.perform();\n              }));\n            case 4:\n            case \"end\":\n              return _context36.stop();\n          }\n        }, _callee36, this);\n      }));\n      function visit(_x27) {\n        return _visit2.apply(this, arguments);\n      }\n      return visit;\n    }()\n  }, {\n    key: \"navigateFrame\",\n    value: function navigateFrame(element, url, submitter) {\n      var frame = this.findFrameElement(element, submitter);\n      frame.delegate.proposeVisitIfNavigatedWithAction(frame, element, submitter);\n      this.withCurrentNavigationElement(element, function () {\n        frame.src = url;\n      });\n    }\n  }, {\n    key: \"proposeVisitIfNavigatedWithAction\",\n    value: function proposeVisitIfNavigatedWithAction(frame, element, submitter) {\n      var _this42 = this;\n      this.action = getVisitAction(submitter, element, frame);\n      if (this.action) {\n        var pageSnapshot = PageSnapshot.fromElement(frame).clone();\n        var visitCachedSnapshot = frame.delegate.visitCachedSnapshot;\n        frame.delegate.fetchResponseLoaded = function (fetchResponse) {\n          if (frame.src) {\n            var statusCode = fetchResponse.statusCode,\n              redirected = fetchResponse.redirected;\n            var responseHTML = frame.ownerDocument.documentElement.outerHTML;\n            var response = {\n              statusCode: statusCode,\n              redirected: redirected,\n              responseHTML: responseHTML\n            };\n            var options = {\n              response: response,\n              visitCachedSnapshot: visitCachedSnapshot,\n              willRender: false,\n              updateHistory: false,\n              restorationIdentifier: _this42.restorationIdentifier,\n              snapshot: pageSnapshot\n            };\n            if (_this42.action) options.action = _this42.action;\n            session.visit(frame.src, options);\n          }\n        };\n      }\n    }\n  }, {\n    key: \"changeHistory\",\n    value: function changeHistory() {\n      if (this.action) {\n        var method = getHistoryMethodForAction(this.action);\n        session.history.update(method, expandURL(this.element.src || \"\"), this.restorationIdentifier);\n      }\n    }\n  }, {\n    key: \"willHandleFrameMissingFromResponse\",\n    value: function willHandleFrameMissingFromResponse(fetchResponse) {\n      var _this43 = this;\n      this.element.setAttribute(\"complete\", \"\");\n      var response = fetchResponse.response;\n      var visit = /*#__PURE__*/function () {\n        var _ref26 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee37(url) {\n          var options,\n            _args6 = arguments;\n          return _regeneratorRuntime().wrap(function _callee37$(_context37) {\n            while (1) switch (_context37.prev = _context37.next) {\n              case 0:\n                options = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};\n                if (url instanceof Response) {\n                  _this43.visitResponse(url);\n                } else {\n                  session.visit(url, options);\n                }\n              case 2:\n              case \"end\":\n                return _context37.stop();\n            }\n          }, _callee37);\n        }));\n        return function visit(_x28) {\n          return _ref26.apply(this, arguments);\n        };\n      }();\n      var event = dispatch(\"turbo:frame-missing\", {\n        target: this.element,\n        detail: {\n          response: response,\n          visit: visit\n        },\n        cancelable: true\n      });\n      return !event.defaultPrevented;\n    }\n  }, {\n    key: \"visitResponse\",\n    value: function () {\n      var _visitResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee38(response) {\n        var wrapped, responseHTML, location, redirected, statusCode;\n        return _regeneratorRuntime().wrap(function _callee38$(_context38) {\n          while (1) switch (_context38.prev = _context38.next) {\n            case 0:\n              wrapped = new FetchResponse(response);\n              _context38.next = 3;\n              return wrapped.responseHTML;\n            case 3:\n              responseHTML = _context38.sent;\n              location = wrapped.location, redirected = wrapped.redirected, statusCode = wrapped.statusCode;\n              return _context38.abrupt(\"return\", session.visit(location, {\n                response: {\n                  redirected: redirected,\n                  statusCode: statusCode,\n                  responseHTML: responseHTML\n                }\n              }));\n            case 6:\n            case \"end\":\n              return _context38.stop();\n          }\n        }, _callee38);\n      }));\n      function visitResponse(_x29) {\n        return _visitResponse.apply(this, arguments);\n      }\n      return visitResponse;\n    }()\n  }, {\n    key: \"findFrameElement\",\n    value: function findFrameElement(element, submitter) {\n      var _a;\n      var id = getAttribute(\"data-turbo-frame\", submitter, element) || this.element.getAttribute(\"target\");\n      return (_a = getFrameElementById(id)) !== null && _a !== void 0 ? _a : this.element;\n    }\n  }, {\n    key: \"extractForeignFrameElement\",\n    value: function () {\n      var _extractForeignFrameElement = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee39(container) {\n        var element, id;\n        return _regeneratorRuntime().wrap(function _callee39$(_context39) {\n          while (1) switch (_context39.prev = _context39.next) {\n            case 0:\n              id = CSS.escape(this.id);\n              _context39.prev = 1;\n              element = activateElement(container.querySelector(\"turbo-frame#\".concat(id)), this.sourceURL);\n              if (!element) {\n                _context39.next = 5;\n                break;\n              }\n              return _context39.abrupt(\"return\", element);\n            case 5:\n              element = activateElement(container.querySelector(\"turbo-frame[src][recurse~=\".concat(id, \"]\")), this.sourceURL);\n              if (!element) {\n                _context39.next = 12;\n                break;\n              }\n              _context39.next = 9;\n              return element.loaded;\n            case 9:\n              _context39.next = 11;\n              return this.extractForeignFrameElement(element);\n            case 11:\n              return _context39.abrupt(\"return\", _context39.sent);\n            case 12:\n              _context39.next = 18;\n              break;\n            case 14:\n              _context39.prev = 14;\n              _context39.t0 = _context39[\"catch\"](1);\n              console.error(_context39.t0);\n              return _context39.abrupt(\"return\", new FrameElement());\n            case 18:\n              return _context39.abrupt(\"return\", null);\n            case 19:\n            case \"end\":\n              return _context39.stop();\n          }\n        }, _callee39, this, [[1, 14]]);\n      }));\n      function extractForeignFrameElement(_x30) {\n        return _extractForeignFrameElement.apply(this, arguments);\n      }\n      return extractForeignFrameElement;\n    }()\n  }, {\n    key: \"formActionIsVisitable\",\n    value: function formActionIsVisitable(form, submitter) {\n      var action = getAction(form, submitter);\n      return locationIsVisitable(expandURL(action), this.rootLocation);\n    }\n  }, {\n    key: \"shouldInterceptNavigation\",\n    value: function shouldInterceptNavigation(element, submitter) {\n      var id = getAttribute(\"data-turbo-frame\", submitter, element) || this.element.getAttribute(\"target\");\n      if (element instanceof HTMLFormElement && !this.formActionIsVisitable(element, submitter)) {\n        return false;\n      }\n      if (!this.enabled || id == \"_top\") {\n        return false;\n      }\n      if (id) {\n        var frameElement = getFrameElementById(id);\n        if (frameElement) {\n          return !frameElement.disabled;\n        }\n      }\n      if (!session.elementIsNavigatable(element)) {\n        return false;\n      }\n      if (submitter && !session.elementIsNavigatable(submitter)) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this.element.id;\n    }\n  }, {\n    key: \"enabled\",\n    get: function get() {\n      return !this.element.disabled;\n    }\n  }, {\n    key: \"sourceURL\",\n    get: function get() {\n      if (this.element.src) {\n        return this.element.src;\n      }\n    },\n    set: function set(sourceURL) {\n      var _this44 = this;\n      this.ignoringChangesToAttribute(\"src\", function () {\n        _this44.element.src = sourceURL !== null && sourceURL !== void 0 ? sourceURL : null;\n      });\n    }\n  }, {\n    key: \"loadingStyle\",\n    get: function get() {\n      return this.element.loading;\n    }\n  }, {\n    key: \"isLoading\",\n    get: function get() {\n      return this.formSubmission !== undefined || this.resolveVisitPromise() !== undefined;\n    }\n  }, {\n    key: \"complete\",\n    get: function get() {\n      return this.element.hasAttribute(\"complete\");\n    },\n    set: function set(value) {\n      var _this45 = this;\n      this.ignoringChangesToAttribute(\"complete\", function () {\n        if (value) {\n          _this45.element.setAttribute(\"complete\", \"\");\n        } else {\n          _this45.element.removeAttribute(\"complete\");\n        }\n      });\n    }\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      return this.element.isActive && this.connected;\n    }\n  }, {\n    key: \"rootLocation\",\n    get: function get() {\n      var _a;\n      var meta = this.element.ownerDocument.querySelector(\"meta[name=\\\"turbo-root\\\"]\");\n      var root = (_a = meta === null || meta === void 0 ? void 0 : meta.content) !== null && _a !== void 0 ? _a : \"/\";\n      return expandURL(root);\n    }\n  }, {\n    key: \"isIgnoringChangesTo\",\n    value: function isIgnoringChangesTo(attributeName) {\n      return this.ignoredAttributes.has(attributeName);\n    }\n  }, {\n    key: \"ignoringChangesToAttribute\",\n    value: function ignoringChangesToAttribute(attributeName, callback) {\n      this.ignoredAttributes.add(attributeName);\n      callback();\n      this.ignoredAttributes[\"delete\"](attributeName);\n    }\n  }, {\n    key: \"withCurrentNavigationElement\",\n    value: function withCurrentNavigationElement(element, callback) {\n      this.currentNavigationElement = element;\n      callback();\n      delete this.currentNavigationElement;\n    }\n  }]);\n  return FrameController;\n}();\nfunction getFrameElementById(id) {\n  if (id != null) {\n    var element = document.getElementById(id);\n    if (element instanceof FrameElement) {\n      return element;\n    }\n  }\n}\nfunction activateElement(element, currentURL) {\n  if (element) {\n    var src = element.getAttribute(\"src\");\n    if (src != null && currentURL != null && urlsAreEqual(src, currentURL)) {\n      throw new Error(\"Matching <turbo-frame id=\\\"\".concat(element.id, \"\\\"> element has a source URL which references itself\"));\n    }\n    if (element.ownerDocument !== document) {\n      element = document.importNode(element, true);\n    }\n    if (element instanceof FrameElement) {\n      element.connectedCallback();\n      element.disconnectedCallback();\n      return element;\n    }\n  }\n}\nvar StreamElement = /*#__PURE__*/function (_HTMLElement2) {\n  _inherits(StreamElement, _HTMLElement2);\n  var _super9 = _createSuper(StreamElement);\n  function StreamElement() {\n    _classCallCheck(this, StreamElement);\n    return _super9.apply(this, arguments);\n  }\n  _createClass(StreamElement, [{\n    key: \"connectedCallback\",\n    value: function () {\n      var _connectedCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee40() {\n        return _regeneratorRuntime().wrap(function _callee40$(_context40) {\n          while (1) switch (_context40.prev = _context40.next) {\n            case 0:\n              _context40.prev = 0;\n              _context40.next = 3;\n              return this.render();\n            case 3:\n              _context40.next = 8;\n              break;\n            case 5:\n              _context40.prev = 5;\n              _context40.t0 = _context40[\"catch\"](0);\n              console.error(_context40.t0);\n            case 8:\n              _context40.prev = 8;\n              this.disconnect();\n              return _context40.finish(8);\n            case 11:\n            case \"end\":\n              return _context40.stop();\n          }\n        }, _callee40, this, [[0, 5, 8, 11]]);\n      }));\n      function connectedCallback() {\n        return _connectedCallback.apply(this, arguments);\n      }\n      return connectedCallback;\n    }()\n  }, {\n    key: \"render\",\n    value: function () {\n      var _render6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee42() {\n        var _this46 = this;\n        var _a;\n        return _regeneratorRuntime().wrap(function _callee42$(_context42) {\n          while (1) switch (_context42.prev = _context42.next) {\n            case 0:\n              return _context42.abrupt(\"return\", (_a = this.renderPromise) !== null && _a !== void 0 ? _a : this.renderPromise = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee41() {\n                var event;\n                return _regeneratorRuntime().wrap(function _callee41$(_context41) {\n                  while (1) switch (_context41.prev = _context41.next) {\n                    case 0:\n                      event = _this46.beforeRenderEvent;\n                      if (!_this46.dispatchEvent(event)) {\n                        _context41.next = 6;\n                        break;\n                      }\n                      _context41.next = 4;\n                      return nextAnimationFrame();\n                    case 4:\n                      _context41.next = 6;\n                      return event.detail.render(_this46);\n                    case 6:\n                    case \"end\":\n                      return _context41.stop();\n                  }\n                }, _callee41);\n              }))());\n            case 1:\n            case \"end\":\n              return _context42.stop();\n          }\n        }, _callee42, this);\n      }));\n      function render() {\n        return _render6.apply(this, arguments);\n      }\n      return render;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      try {\n        this.remove();\n      } catch (_a) {}\n    }\n  }, {\n    key: \"removeDuplicateTargetChildren\",\n    value: function removeDuplicateTargetChildren() {\n      this.duplicateChildren.forEach(function (c) {\n        return c.remove();\n      });\n    }\n  }, {\n    key: \"duplicateChildren\",\n    get: function get() {\n      var _a;\n      var existingChildren = this.targetElements.flatMap(function (e) {\n        return _toConsumableArray(e.children);\n      }).filter(function (c) {\n        return !!c.id;\n      });\n      var newChildrenIds = _toConsumableArray(((_a = this.templateContent) === null || _a === void 0 ? void 0 : _a.children) || []).filter(function (c) {\n        return !!c.id;\n      }).map(function (c) {\n        return c.id;\n      });\n      return existingChildren.filter(function (c) {\n        return newChildrenIds.includes(c.id);\n      });\n    }\n  }, {\n    key: \"performAction\",\n    get: function get() {\n      if (this.action) {\n        var actionFunction = StreamActions[this.action];\n        if (actionFunction) {\n          return actionFunction;\n        }\n        this.raise(\"unknown action\");\n      }\n      this.raise(\"action attribute is missing\");\n    }\n  }, {\n    key: \"targetElements\",\n    get: function get() {\n      if (this.target) {\n        return this.targetElementsById;\n      } else if (this.targets) {\n        return this.targetElementsByQuery;\n      } else {\n        this.raise(\"target or targets attribute is missing\");\n      }\n    }\n  }, {\n    key: \"templateContent\",\n    get: function get() {\n      return this.templateElement.content.cloneNode(true);\n    }\n  }, {\n    key: \"templateElement\",\n    get: function get() {\n      if (this.firstElementChild === null) {\n        var template = this.ownerDocument.createElement(\"template\");\n        this.appendChild(template);\n        return template;\n      } else if (this.firstElementChild instanceof HTMLTemplateElement) {\n        return this.firstElementChild;\n      }\n      this.raise(\"first child element must be a <template> element\");\n    }\n  }, {\n    key: \"action\",\n    get: function get() {\n      return this.getAttribute(\"action\");\n    }\n  }, {\n    key: \"target\",\n    get: function get() {\n      return this.getAttribute(\"target\");\n    }\n  }, {\n    key: \"targets\",\n    get: function get() {\n      return this.getAttribute(\"targets\");\n    }\n  }, {\n    key: \"raise\",\n    value: function raise(message) {\n      throw new Error(\"\".concat(this.description, \": \").concat(message));\n    }\n  }, {\n    key: \"description\",\n    get: function get() {\n      var _a, _b;\n      return (_b = ((_a = this.outerHTML.match(/<[^>]+>/)) !== null && _a !== void 0 ? _a : [])[0]) !== null && _b !== void 0 ? _b : \"<turbo-stream>\";\n    }\n  }, {\n    key: \"beforeRenderEvent\",\n    get: function get() {\n      return new CustomEvent(\"turbo:before-stream-render\", {\n        bubbles: true,\n        cancelable: true,\n        detail: {\n          newStream: this,\n          render: StreamElement.renderElement\n        }\n      });\n    }\n  }, {\n    key: \"targetElementsById\",\n    get: function get() {\n      var _a;\n      var element = (_a = this.ownerDocument) === null || _a === void 0 ? void 0 : _a.getElementById(this.target);\n      if (element !== null) {\n        return [element];\n      } else {\n        return [];\n      }\n    }\n  }, {\n    key: \"targetElementsByQuery\",\n    get: function get() {\n      var _a;\n      var elements = (_a = this.ownerDocument) === null || _a === void 0 ? void 0 : _a.querySelectorAll(this.targets);\n      if (elements.length !== 0) {\n        return Array.prototype.slice.call(elements);\n      } else {\n        return [];\n      }\n    }\n  }], [{\n    key: \"renderElement\",\n    value: function () {\n      var _renderElement = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee43(newElement) {\n        return _regeneratorRuntime().wrap(function _callee43$(_context43) {\n          while (1) switch (_context43.prev = _context43.next) {\n            case 0:\n              _context43.next = 2;\n              return newElement.performAction();\n            case 2:\n            case \"end\":\n              return _context43.stop();\n          }\n        }, _callee43);\n      }));\n      function renderElement(_x31) {\n        return _renderElement.apply(this, arguments);\n      }\n      return renderElement;\n    }()\n  }]);\n  return StreamElement;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\nvar StreamSourceElement = /*#__PURE__*/function (_HTMLElement3) {\n  _inherits(StreamSourceElement, _HTMLElement3);\n  var _super10 = _createSuper(StreamSourceElement);\n  function StreamSourceElement() {\n    var _this47;\n    _classCallCheck(this, StreamSourceElement);\n    _this47 = _super10.apply(this, arguments);\n    _this47.streamSource = null;\n    return _this47;\n  }\n  _createClass(StreamSourceElement, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.streamSource = this.src.match(/^ws{1,2}:/) ? new WebSocket(this.src) : new EventSource(this.src);\n      connectStreamSource(this.streamSource);\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      if (this.streamSource) {\n        disconnectStreamSource(this.streamSource);\n      }\n    }\n  }, {\n    key: \"src\",\n    get: function get() {\n      return this.getAttribute(\"src\") || \"\";\n    }\n  }]);\n  return StreamSourceElement;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\nFrameElement.delegateConstructor = FrameController;\nif (customElements.get(\"turbo-frame\") === undefined) {\n  customElements.define(\"turbo-frame\", FrameElement);\n}\nif (customElements.get(\"turbo-stream\") === undefined) {\n  customElements.define(\"turbo-stream\", StreamElement);\n}\nif (customElements.get(\"turbo-stream-source\") === undefined) {\n  customElements.define(\"turbo-stream-source\", StreamSourceElement);\n}\n(function () {\n  var element = document.currentScript;\n  if (!element) return;\n  if (element.hasAttribute(\"data-turbo-suppress-warning\")) return;\n  element = element.parentElement;\n  while (element) {\n    if (element == document.body) {\n      return console.warn(unindent(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n        You are loading Turbo from a <script> element inside the <body> element. This is probably not what you meant to do!\\n\\n        Load your application\\u2019s JavaScript bundle inside the <head> element instead. <script> elements in <body> are evaluated with each page change.\\n\\n        For more information, see: https://turbo.hotwired.dev/handbook/building#working-with-script-elements\\n\\n        \\u2014\\u2014\\n        Suppress this warning by adding a \\\"data-turbo-suppress-warning\\\" attribute to: %s\\n      \"]))), element.outerHTML);\n    }\n    element = element.parentElement;\n  }\n})();\nwindow.Turbo = Turbo;\nstart();\nexport { FrameElement, FrameLoadingStyle, FrameRenderer, PageRenderer, PageSnapshot, StreamActions, StreamElement, StreamSourceElement, cache, clearCache, connectStreamSource, disconnectStreamSource, navigator$1 as navigator, registerAdapter, renderStreamMessage, session, setConfirmMethod, setFormMode, setProgressBarDelay, start, visit };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}